[{"/Users/bartpiasek/lazybudget/lazybugetapp/src/index.js":"1","/Users/bartpiasek/lazybudget/lazybugetapp/src/App.js":"2","/Users/bartpiasek/lazybudget/lazybugetapp/src/context/GlobalState.js":"3","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Layout/Layout.js":"4","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Main/LazyInput/LazyInput.js":"5","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Navigation/Navbar/Navbar.js":"6","/Users/bartpiasek/lazybudget/lazybugetapp/src/context/AppReducer.js":"7","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/History/History.js":"8","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Main/LazyInput/Data.js":"9","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Main/Form/AddTransactionForm.js":"10","/Users/bartpiasek/lazybudget/lazybugetapp/src/axios.js":"11","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/DarkMode/DarkModeToggle.js":"12","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/DarkMode/Toggle.js":"13","/Users/bartpiasek/lazybudget/lazybugetapp/src/auth/signup.js":"14","/Users/bartpiasek/lazybudget/lazybugetapp/src/context/Auth.js":"15","/Users/bartpiasek/lazybudget/lazybugetapp/src/auth/firebase.js":"16","/Users/bartpiasek/lazybudget/lazybugetapp/src/auth/login.js":"17","/Users/bartpiasek/lazybudget/lazybugetapp/src/auth/privateRoute.js":"18","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/History/TransactionUI.js":"19","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Analytics/Dashboard.js":"20","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Analytics/Total.js":"21","/Users/bartpiasek/lazybudget/lazybugetapp/src/context/TransactionListContext.js":"22","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Analytics/Expenses.js":"23","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Analytics/Incomes.js":"24","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Analytics/Savings.js":"25","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Main/data.js":"26","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Main/Data.js":"27","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/History/HistoryFilters.js":"28","/Users/bartpiasek/lazybudget/lazybugetapp/src/context/CashflowContext.js":"29","/Users/bartpiasek/lazybudget/lazybugetapp/src/context/LocalStorage.js":"30"},{"size":244,"mtime":1616693317072,"results":"31","hashOfConfig":"32"},{"size":1515,"mtime":1627067643095,"results":"33","hashOfConfig":"32"},{"size":911,"mtime":1625432923386,"results":"34","hashOfConfig":"32"},{"size":504,"mtime":1625906609261,"results":"35","hashOfConfig":"32"},{"size":3117,"mtime":1627242667084,"results":"36","hashOfConfig":"32"},{"size":2886,"mtime":1627243636946,"results":"37","hashOfConfig":"32"},{"size":536,"mtime":1626798751041,"results":"38","hashOfConfig":"32"},{"size":6127,"mtime":1627242484404,"results":"39","hashOfConfig":"32"},{"size":432,"mtime":1626015154657,"results":"40","hashOfConfig":"32"},{"size":3674,"mtime":1627243900352,"results":"41","hashOfConfig":"32"},{"size":151,"mtime":1614627227358,"results":"42","hashOfConfig":"32"},{"size":548,"mtime":1625993069463,"results":"43","hashOfConfig":"32"},{"size":312,"mtime":1612018980962,"results":"44","hashOfConfig":"32"},{"size":3200,"mtime":1627243355341,"results":"45","hashOfConfig":"32"},{"size":1401,"mtime":1618168847624,"results":"46","hashOfConfig":"32"},{"size":587,"mtime":1623702412234,"results":"47","hashOfConfig":"32"},{"size":2597,"mtime":1627243442159,"results":"48","hashOfConfig":"32"},{"size":471,"mtime":1618342353033,"results":"49","hashOfConfig":"32"},{"size":753,"mtime":1627242529148,"results":"50","hashOfConfig":"32"},{"size":3427,"mtime":1627244239411,"results":"51","hashOfConfig":"32"},{"size":612,"mtime":1626729063283,"results":"52","hashOfConfig":"32"},{"size":952,"mtime":1627063330243,"results":"53","hashOfConfig":"32"},{"size":1027,"mtime":1626977376278,"results":"54","hashOfConfig":"32"},{"size":971,"mtime":1626977345008,"results":"55","hashOfConfig":"32"},{"size":1236,"mtime":1626977013261,"results":"56","hashOfConfig":"32"},{"size":468,"mtime":1625859380220,"results":"57","hashOfConfig":"32"},{"size":470,"mtime":1625946509284,"results":"58","hashOfConfig":"32"},{"size":7897,"mtime":1626301039983,"results":"59","hashOfConfig":"32"},{"size":646,"mtime":1627334028359,"results":"60","hashOfConfig":"32"},{"size":388,"mtime":1627333455089,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1bur3ci",{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/bartpiasek/lazybudget/lazybugetapp/src/index.js",[],["133","134"],"/Users/bartpiasek/lazybudget/lazybugetapp/src/App.js",["135"],"import React from \"react\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\n\nimport Layout from \"./components/Layout/Layout\";\nimport LazyInput from \"./components/Main/LazyInput/LazyInput\";\nimport NavbarMain from \"./components/Navigation/Navbar/Navbar\";\n\nimport DarkModeToggle from \"../src/components/DarkMode/DarkModeToggle\";\n\nimport \"../src/components/classes.scss\";\n\nimport { GlobalProvider } from \"./context/GlobalState\";\nimport { AuthProvider } from \"../src/context/Auth\";\nimport Signup from \"./auth/signup\";\nimport Login from \"./auth/login\";\nimport PrivateRoute from \"../src/auth/privateRoute\";\nimport Dashboard from \"./components/Analytics/Dashboard\";\nimport { TransactionsProvider } from \"./context/TransactionListContext\";\nimport { CashflowProvider } from \"./context/CashflowContext\";\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <GlobalProvider>\n        <TransactionsProvider>\n          <CashflowProvider>\n            <Router>\n              <NavbarMain />\n              <Switch>\n                <PrivateRoute exact path=\"/\" component={Layout} />\n                <Route path=\"/lazy\" component={LazyInput} />\n                <Route path=\"/signup\" component={Signup} />\n                <Route path=\"/login\" component={Login} />\n                <Route path=\"/analytics\" component={Dashboard} />\n              </Switch>\n            </Router>\n          </CashflowProvider>\n        </TransactionsProvider>\n      </GlobalProvider>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","/Users/bartpiasek/lazybudget/lazybugetapp/src/context/GlobalState.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Layout/Layout.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Main/LazyInput/LazyInput.js",["136","137","138"],"import React, { useState, useContext, useRef } from \"react\";\nimport { GlobalContext } from \"../../../context/GlobalState\";\nimport { Rent, Salary, Subscriptions } from \"./Data\";\nimport axios from \"../../../axios\";\nimport \"../../classes.scss\";\n\nimport FormBootstrap from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\n\nexport const LazyInput = () => {\n  const [text, setText] = useState(\"\");\n  const [amount, setAmount] = useState();\n  const [option, setOption] = useState(\"expense\");\n  const [date, setDate] = useState(\"\");\n  const [category, setCategory] = useState();\n\n  // const inputRef = useRef();\n\n  const { addTransaction } = useContext(GlobalContext);\n\n  const newExpenseTransaction = {\n    id: Math.floor(Math.random() * 10000),\n    text,\n    amount: -Math.abs(amount),\n    option,\n    date: new Date().toISOString(),\n    category,\n  };\n\n  const newIncomeTransaction = {\n    id: Math.floor(Math.random() * 10000),\n    text,\n    amount: parseInt(amount),\n    option,\n    date: new Date().toISOString(),\n    category,\n  };\n\n  const onSubmit = (e) => {\n    axios\n      .post(\n        \"/transactions.json\",\n        option === \"expense\"\n          ? Object.assign(newExpenseTransaction)\n          : Object.assign(newIncomeTransaction)\n      )\n      .then((response) => console.log(response))\n      .catch((error) => console.log(error));\n    e.preventDefault();\n\n    option === \"expense\"\n      ? addTransaction(newExpenseTransaction)\n      : addTransaction(newIncomeTransaction);\n  };\n\n  return (\n    <Container>\n      <Row md={4}>\n        <Col>\n          <FormBootstrap onSubmit={onSubmit}>\n            <CardDeck>\n              <Card className=\"element-darkmode\">\n                <div\n                  value={Rent.text}\n                  // onClick={(e) => setState(Rent)}\n                >\n                  <Card.Body>\n                    <Card.Title>{Rent.text}</Card.Title>\n                    <Card.Text>{Rent.category}</Card.Text>\n                    <Card.Text>{Rent.amount} PLN</Card.Text>\n                  </Card.Body>\n                  <Button\n                    variant=\"flat\"\n                    className=\"button-sort element-darkmode\"\n                    type=\"submit\"\n                    value={date.value}\n                    key={date.key}\n                    onClick={\n                      ((e) => setText(Rent.text),\n                      (e) => setAmount(Rent.amount),\n                      (e) => setOption(Rent.option),\n                      (e) => setDate(e.target.value),\n                      (e) => setCategory(Rent.category))\n                    }\n                  >\n                    Add\n                  </Button>\n                </div>\n              </Card>\n            </CardDeck>\n          </FormBootstrap>\n        </Col>\n        <Col xs={6}></Col>\n        <Col></Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default LazyInput;\n","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Navigation/Navbar/Navbar.js",["139"],"import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport lazybudgetLogo from \"../../../assets/svg/006-wallet.svg\";\nimport { useAuth } from \"../../../context/Auth\";\nimport \"../../classes.scss\";\n\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Container from \"react-bootstrap/Container\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport DarkModeToggle from \"../../DarkMode/DarkModeToggle\";\n\nfunction NavbarMain() {\n  const [error, setError] = useState(\"\");\n  const { currentUser, logout } = useAuth();\n  const history = useHistory();\n\n  async function handleLogout() {\n    setError(\"\");\n    try {\n      await logout();\n      history.push(\"/login\");\n    } catch {\n      setError(\"Failed to logout\");\n    }\n  }\n\n  return (\n    <Navbar\n      collapseOnSelect\n      className=\"navbar element-darkmode element-lightmode\"\n      expand=\"sm\"\n      sticky=\"top\"\n    >\n      <Container>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            {currentUser ? (\n              <>\n                <Link className=\"button-navbar\" to=\"/\">\n                  <img alt=\"\" src={lazybudgetLogo} width=\"30\" height=\"30\" />\n                </Link>\n                <Link className=\"button-navbar\" to=\"/analytics\">\n                  Analytics\n                </Link>\n                <Link className=\"button-navbar\" to=\"/lazy\">\n                  LazyMode\n                </Link>\n                <Dropdown>\n                  <div>\n                    <Dropdown.Toggle\n                      variant=\"flat\"\n                      id=\"dropdown-basic\"\n                      className=\"button-navbar\"\n                    >\n                      <p className=\"button-navbar\">\n                        <strong>{currentUser && currentUser.email}</strong>\n                      </p>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu className=\"button-navbar element-darkmode\">\n                      <Dropdown.Item>\n                        <DarkModeToggle />\n                      </Dropdown.Item>\n                      <Dropdown.Item>Settings</Dropdown.Item>\n                      <Dropdown.Item onClick={handleLogout}>\n                        Logout\n                      </Dropdown.Item>\n                    </Dropdown.Menu>\n                  </div>\n                </Dropdown>\n              </>\n            ) : (\n              <>\n                <Link className=\"button-navbar\" to=\"/signup\">\n                  Sign Up\n                </Link>\n                <Link className=\"button-navbar\" to=\"/login\">\n                  Log In\n                </Link>\n              </>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default NavbarMain;\n","/Users/bartpiasek/lazybudget/lazybugetapp/src/context/AppReducer.js",["140"],"export default (state, action) => {\n  switch (action.type) {\n    case \"DELETE_TRANSACTION\":\n      return {\n        ...state,\n        // send state without element with removed id\n        transactions: state.transactions.filter(\n          (transaction) => transaction.id !== action.payload\n        ),\n      };\n    case \"ADD_TRANSACTION\":\n      return {\n        ...state,\n        // action.payload - This is a new transaction\n        transactions: [action.payload, ...state.transactions],\n      };\n    default:\n      return state;\n  }\n};\n","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/History/History.js",["141"],"import React, { useContext, useState } from \"react\";\nimport { TransactionsContext } from \"../../context/TransactionListContext\";\nimport Total from \"../Analytics/Total\";\nimport Expenses from \"../Analytics/Expenses\";\nimport Incomes from \"../Analytics/Incomes\";\n\nimport {\n  AllFilter,\n  IncomeFilter,\n  ExpenseFilter,\n  CategoryFoodFilter,\n  CategoryBillsFilter,\n  CategoryEntertainmentFilter,\n  CategoryMiscFilter,\n  CategorySavingsFilter,\n  CategoryHousingFilter,\n} from \"./HistoryFilters\";\nimport \"../classes.scss\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport { CashflowContext } from \"../../context/CashflowContext\";\n\nconst History = () => {\n  // CONTEXT API STATES\n  const [transactions] = useContext(TransactionsContext);\n  // const [incomeGoal] = useContext(CashflowContext);\n  // const [expenseGoal] = useContext(CashflowContext);\n\n  const { incomeGoal, expenseGoal } = useContext(CashflowContext);\n  const transactionsValues = Object.values(transactions);\n  const sumTransactionValues = transactionsValues\n    .reverse()\n    .map((transaction) => transaction.amount);\n\n  //FILTER BEFORE, IN CONTEXT API - that re-renders Total, Expenses, Income component with filter conditions\n  //...\n\n  //FILTER UI IN COMPONENT\n  const [filterHistory, setFilterHistory] = useState(\"All\");\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <Incomes max={incomeGoal} />\n        </Col>\n        <Col>\n          <Expenses max={expenseGoal} />\n        </Col>\n        <Col>\n          <Total />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div>\n            <hr />\n            <div>\n              <div>\n                <h5>Last transactions</h5>\n                <div>\n                  {filterHistory !== \"All\" ? (\n                    <Button\n                      value=\"All\"\n                      onClick={(e) => setFilterHistory(e.target.value)}\n                      className=\"button-sort element-darkmode\"\n                      variant=\"sort\"\n                    >\n                      X\n                    </Button>\n                  ) : (\n                    <Button\n                      value=\"All\"\n                      onClick={(e) => setFilterHistory(e.target.value)}\n                      className=\"button-sort element-darkmode\"\n                      variant=\"sort\"\n                    >\n                      All\n                    </Button>\n                  )}\n\n                  <Button\n                    className=\"button-sort element-darkmode\"\n                    variant=\"sort\"\n                  >\n                    This month\n                  </Button>\n                  <Button\n                    value=\"Expense\"\n                    onClick={(e) => setFilterHistory(e.target.value)}\n                    className=\"button-sort element-darkmode\"\n                    variant=\"sort\"\n                  >\n                    Expense\n                  </Button>\n                  <Button\n                    value=\"Income\"\n                    onClick={(e) => setFilterHistory(e.target.value)}\n                    className=\"button-sort element-darkmode\"\n                    variant=\"sort\"\n                  >\n                    Income\n                  </Button>\n                  <Button\n                    value=\"Food\"\n                    onClick={(e) => setFilterHistory(e.target.value)}\n                    className=\"button-sort element-darkmode\"\n                    variant=\"sort\"\n                  >\n                    Food\n                  </Button>\n                  <Button\n                    value=\"Housing\"\n                    onClick={(e) => setFilterHistory(e.target.value)}\n                    className=\"button-sort element-darkmode\"\n                    variant=\"sort\"\n                  >\n                    Housing\n                  </Button>\n                  <Button\n                    value=\"Bills\"\n                    onClick={(e) => setFilterHistory(e.target.value)}\n                    className=\"button-sort element-darkmode\"\n                    variant=\"sort\"\n                  >\n                    Bills\n                  </Button>\n                  <Button\n                    value=\"Entertainment\"\n                    onClick={(e) => setFilterHistory(e.target.value)}\n                    className=\"button-sort element-darkmode\"\n                    variant=\"sort\"\n                  >\n                    Entertainment\n                  </Button>\n                  <Button\n                    value=\"Misc\"\n                    onClick={(e) => setFilterHistory(e.target.value)}\n                    className=\"button-sort element-darkmode\"\n                    variant=\"sort\"\n                  >\n                    Misc\n                  </Button>\n                  <Button\n                    value=\"Savings\"\n                    onClick={(e) => setFilterHistory(e.target.value)}\n                    className=\"button-sort element-darkmode\"\n                    variant=\"sort\"\n                  >\n                    Savings\n                  </Button>\n                </div>\n                {\n                  <div>\n                    {filterHistory === \"All\" && <AllFilter />}\n                    {filterHistory === \"Income\" && <IncomeFilter />}\n                    {filterHistory === \"Expense\" && <ExpenseFilter />}\n                    {filterHistory === \"Food\" && <CategoryFoodFilter />}\n                    {filterHistory === \"Housing\" && <CategoryHousingFilter />}\n                    {filterHistory === \"Bills\" && <CategoryBillsFilter />}\n                    {filterHistory === \"Entertainment\" && (\n                      <CategoryEntertainmentFilter />\n                    )}\n                    {filterHistory === \"Misc\" && <CategoryMiscFilter />}\n                    {filterHistory === \"Savings\" && <CategorySavingsFilter />}\n                  </div>\n                }\n              </div>\n            </div>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default History;\n","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Main/LazyInput/Data.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Main/Form/AddTransactionForm.js",["142","143","144","145"],"import React, { useState, useContext, useRef, useReducer } from \"react\";\nimport { options, categories } from \"../Data\";\nimport { GlobalContext } from \"../../../context/GlobalState\";\nimport axios from \"../../../axios\";\nimport \"../../classes.scss\";\n\nimport FormBootstrap from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nexport const Form = () => {\n  const [text, setText] = useState(\"\");\n  const [amount, setAmount] = useState();\n  const [option, setOption] = useState(\"expense\");\n  const [date, setDate] = useState(\"\");\n  const [category, setCategory] = useState();\n\n  const inputRef = useRef();\n\n  const { addTransaction } = useContext(GlobalContext);\n\n  const newExpenseTransaction = {\n    id: Math.floor(Math.random() * 10000),\n    text,\n    amount: -Math.abs(amount),\n    option,\n    date: new Date().toISOString(),\n    category,\n  };\n\n  const newIncomeTransaction = {\n    id: Math.floor(Math.random() * 10000),\n    text,\n    amount: parseInt(amount),\n    option,\n    date: new Date().toISOString(),\n    category,\n  };\n\n  const onSubmit = (e) => {\n    axios\n      .post(\n        \"/transactions.json\",\n        option === \"expense\"\n          ? Object.assign(newExpenseTransaction)\n          : Object.assign(newIncomeTransaction)\n      )\n      .then((response) => console.log(response))\n      .catch((error) => console.log(error));\n    e.preventDefault();\n\n    option === \"expense\"\n      ? addTransaction(newExpenseTransaction)\n      : addTransaction(newIncomeTransaction);\n  };\n\n  return (\n    <FormBootstrap className=\"form\" onSubmit={onSubmit}>\n      <FormBootstrap.Group>\n        <FormBootstrap.Control\n          required\n          size=\"lg\"\n          placeholder=\"Name\"\n          className=\"element-darkmode\"\n          ref={inputRef}\n          type=\"text\"\n          value={text}\n          role=\"text-input\"\n          onChange={(e) => setText(e.target.value)}\n        />\n      </FormBootstrap.Group>\n      <FormBootstrap.Group>\n        <FormBootstrap.Control\n          required\n          size=\"lg\"\n          placeholder=\"PLN\"\n          className=\"element-darkmode\"\n          type=\"text\"\n          value={amount}\n          role=\"amount-input\"\n          onChange={(e) => setAmount(e.target.value)}\n        />\n      </FormBootstrap.Group>\n      <FormBootstrap.Group>\n        <select\n          as=\"select\"\n          size=\"lg\"\n          value={option}\n          className=\"element-darkmode\"\n          role=\"cashflow-select\"\n          onChange={(e) => setOption(e.target.value)}\n        >\n          {options.map((option) => (\n            <option key={option.key} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </select>\n      </FormBootstrap.Group>\n      <FormBootstrap.Group>\n        <radio value={category} onChange={(e) => setCategory(e.target.value)}>\n          {categories.map((category) => (\n            <FormBootstrap.Check inline>\n              <input\n                name=\"selection\"\n                type=\"radio\"\n                key={category.key}\n                value={category.value}\n                role=\"sort\"\n              />\n              <label role=\"sort\" className=\"button-sort\">\n                {category.label}\n              </label>\n            </FormBootstrap.Check>\n          ))}\n        </radio>\n      </FormBootstrap.Group>\n      <FormBootstrap.Group></FormBootstrap.Group>\n      <Button\n        className=\"element-darkmode\"\n        variant=\"flat\"\n        type=\"submit\"\n        role=\"button-submit\"\n        value={date.value}\n        key={date.key}\n        onClick={(e) => setDate(e.target.value)}\n      >\n        Add\n      </Button>\n      <hr />\n    </FormBootstrap>\n  );\n};\n","/Users/bartpiasek/lazybudget/lazybugetapp/src/axios.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/DarkMode/DarkModeToggle.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/DarkMode/Toggle.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/auth/signup.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/context/Auth.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/auth/firebase.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/auth/login.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/auth/privateRoute.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/History/TransactionUI.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Analytics/Dashboard.js",["146","147","148","149"],"import React, { useContext, useState } from \"react\";\nimport { TransactionsContext } from \"../../context/TransactionListContext\";\nimport Expenses from \"./Expenses\";\nimport Incomes from \"./Incomes\";\nimport Total from \"./Total\";\nimport Savings from \"./Savings\";\nimport \"../classes.scss\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport FormBootstrap from \"react-bootstrap/Form\";\nimport { CashflowContext } from \"../../context/CashflowContext\";\n\nconst Dashboard = () => {\n  const [transactions] = useContext(TransactionsContext);\n  const {\n    incomeGoal,\n    setIncomeGoal,\n    expenseGoal,\n    setExpenseGoal,\n    savingGoal,\n    setSavingGoal,\n  } = useContext(CashflowContext);\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <Total />\n        </Col>\n        <Col>\n          <Expenses max={expenseGoal} />\n        </Col>\n        <Col>\n          <Incomes max={incomeGoal} />\n        </Col>\n        <Col>\n          <Savings />\n        </Col>\n      </Row>\n      <hr />\n      <Row>\n        <Col>\n          <h5>Goals</h5>\n          <FormBootstrap.Group>\n            <p>Your current spending target:</p>\n            <FormBootstrap.Control\n              required\n              size=\"sm\"\n              placeholder=\"Set new goal\"\n              className=\"element-darkmode\"\n              type=\"text\"\n              value={expenseGoal}\n              role=\"setexpenses-input\"\n              onChange={(e) => setExpenseGoal(e.target.value)}\n            />\n            <Button\n              onSubmit={(e) => setExpenseGoal(e.target.value)}\n              value={expenseGoal.value}\n              key={expenseGoal.key}\n              type=\"submit\"\n              variant=\"flat\"\n              className=\"button-sort element-darkmode\"\n            >\n              Save\n            </Button>\n          </FormBootstrap.Group>\n          <FormBootstrap.Group>\n            <p>Your current income target:</p>\n            <FormBootstrap.Control\n              required\n              size=\"sm\"\n              placeholder=\"Set new goal\"\n              className=\"element-darkmode\"\n              type=\"text\"\n              value={incomeGoal}\n              role=\"setincomes-input\"\n              onChange={(e) => setIncomeGoal(e.target.value)}\n            />\n            <Button\n              onSubmit={(e) => setIncomeGoal(e.target.value)}\n              value={incomeGoal.value}\n              key={incomeGoal.key}\n              type=\"submit\"\n              variant=\"flat\"\n              className=\"button-sort element-darkmode\"\n            >\n              Save\n            </Button>\n          </FormBootstrap.Group>\n          {/* <FormBootstrap.Group>\n            <p>Your current goal:</p>\n            <FormBootstrap.Control\n              required\n              size=\"sm\"\n              placeholder=\"Set new goal\"\n              className=\"element-background\"\n              type=\"text\"\n              value={savingGoal}\n              role=\"setsavings-input\"\n            />\n            <Button\n              onSubmit={(e) => setSavingGoal(e.target.value)}\n              variant=\"flat\"\n              className=\"element-background\"\n            >\n              Save\n            </Button>\n          </FormBootstrap.Group> */}\n        </Col>\n        <Col></Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Dashboard;\n","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Analytics/Total.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/context/TransactionListContext.js",["150","151","152"],"import React, { useState, createContext, useEffect } from \"react\";\n\nexport const TransactionsContext = createContext();\n\nexport const TransactionsProvider = (props) => {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [transactions, setTransactions] = useState({});\n\n  const transactionsValues = Object.values(transactions);\n\n  //GLOBAL TRANSACTION FILTERS FOR HISTORY AND DASHBOARD COMPONENT\n  //...\n\n  useEffect(() => {\n    fetch(\"https://lazyinput-default-rtdb.firebaseio.com/transactions.json\")\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setTransactions(result);\n        },\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      );\n  }, [transactions]);\n\n  return (\n    <TransactionsContext.Provider value={[transactions]}>\n      {props.children}\n    </TransactionsContext.Provider>\n  );\n};\n","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Analytics/Expenses.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Analytics/Incomes.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Analytics/Savings.js",["153","154","155"],"import React, { useContext } from \"react\";\nimport { TransactionsContext } from \"../../context/TransactionListContext\";\nimport Col from \"react-bootstrap/Col\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\n\nconst Savings = () => {\n  const [transactions] = useContext(TransactionsContext);\n  const transactionsValues = Object.values(transactions);\n\n  const sumTransactionValues = transactionsValues\n    .reverse()\n    .map((transaction) => transaction.amount);\n\n  const SavingTransactionValues = transactionsValues\n    .reverse()\n    .map((transaction) => ({\n      amount: transaction.amount,\n      category: transaction.category,\n    }));\n\n  const savingsListTransaction = SavingTransactionValues.filter(\n    (transaction) => {\n      return transaction.category === \"saving\" ? transaction.amount : null;\n    }\n  );\n  // console.log(savingsListTransaction);\n  return (\n    <Col>\n      {/* <h5>Savings</h5>\n      <h2>{Math.abs(savings).toFixed(2)} PLN</h2>\n      <ProgressBar\n        striped\n        variant=\"danger\"\n        min={0}\n        now={Math.abs(savings).toFixed(2)}\n        max={3000}\n        label={`${((Math.abs(savings).toFixed(2) / 7000) * 100).toFixed(2)}%`}\n      /> */}\n    </Col>\n  );\n};\n\nexport default Savings;\n","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Main/data.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Main/Data.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/History/HistoryFilters.js",["156","157","158","159","160","161","162","163","164"],"import React, { useContext } from \"react\";\nimport { TransactionsContext } from \"../../context/TransactionListContext\";\nimport \"../classes.scss\";\nimport TransactionRow from \"./TransactionUI\";\n\n//FILTER BY TYPE OF CASHFLOW\nexport const AllFilter = () => {\n  const [transactions] = useContext(TransactionsContext);\n  const transactionsValues = Object.values(transactions);\n  const sumTransactionValues = transactionsValues\n    .reverse()\n    .map((transaction) => transaction.amount);\n  return (\n    <div className=\"table\">\n      {transactionsValues.map((transaction, key) => {\n        return (\n          <div key={key}>\n            <TransactionRow\n              key={transaction.id}\n              text={transaction.text}\n              amount={transaction.amount}\n              option={transaction.option}\n              date={transaction.date}\n              category={transaction.category}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport const IncomeFilter = () => {\n  const [transactions] = useContext(TransactionsContext);\n  const transactionsValues = Object.values(transactions);\n  const sumTransactionValues = transactionsValues\n    .reverse()\n    .map((transaction) => transaction.amount);\n  return (\n    <div className=\"table\">\n      {transactionsValues.map((transaction, key) => {\n        return transaction.option === \"income\" ? (\n          <div key={key}>\n            <TransactionRow\n              key={transaction.id}\n              text={transaction.text}\n              amount={transaction.amount}\n              option={transaction.option}\n              date={transaction.date}\n              category={transaction.category}\n            />\n          </div>\n        ) : null;\n      })}\n    </div>\n  );\n};\n\nexport const ExpenseFilter = () => {\n  const [transactions] = useContext(TransactionsContext);\n  const transactionsValues = Object.values(transactions);\n  const sumTransactionValues = transactionsValues\n    .reverse()\n    .map((transaction) => transaction.amount);\n  return (\n    <div className=\"table\">\n      {transactionsValues.map((transaction, key) => {\n        return transaction.option === \"expense\" ? (\n          <div key={key}>\n            <TransactionRow\n              key={transaction.id}\n              text={transaction.text}\n              amount={transaction.amount}\n              option={transaction.option}\n              date={transaction.date}\n              category={transaction.category}\n            />\n          </div>\n        ) : null;\n      })}\n    </div>\n  );\n};\n\n// //FILTER BY CATEGORY\nexport const CategoryFoodFilter = () => {\n  const [transactions] = useContext(TransactionsContext);\n  const transactionsValues = Object.values(transactions);\n  const sumTransactionValues = transactionsValues\n    .reverse()\n    .map((transaction) => transaction.amount);\n  return (\n    <div className=\"table\">\n      {transactionsValues.map((transaction, key) => {\n        return transaction.category === \"food\" ? (\n          <div key={key}>\n            <TransactionRow\n              key={transaction.id}\n              text={transaction.text}\n              amount={transaction.amount}\n              option={transaction.option}\n              date={transaction.date}\n              category={transaction.category}\n            />\n          </div>\n        ) : null;\n      })}\n    </div>\n  );\n};\n\nexport const CategoryHousingFilter = () => {\n  const [transactions] = useContext(TransactionsContext);\n  const transactionsValues = Object.values(transactions);\n  const sumTransactionValues = transactionsValues\n    .reverse()\n    .map((transaction) => transaction.amount);\n  return (\n    <div className=\"table\">\n      {transactionsValues.map((transaction, key) => {\n        return transaction.category === \"housing\" ? (\n          <div key={key}>\n            <TransactionRow\n              key={transaction.id}\n              text={transaction.text}\n              amount={transaction.amount}\n              option={transaction.option}\n              date={transaction.date}\n              category={transaction.category}\n            />\n          </div>\n        ) : null;\n      })}\n    </div>\n  );\n};\n\nexport const CategoryBillsFilter = () => {\n  const [transactions] = useContext(TransactionsContext);\n  const transactionsValues = Object.values(transactions);\n  const sumTransactionValues = transactionsValues\n    .reverse()\n    .map((transaction) => transaction.amount);\n  return (\n    <div className=\"table\">\n      {transactionsValues.map((transaction, key) => {\n        return transaction.category === \"bills\" ? (\n          <div key={key}>\n            <TransactionRow\n              key={transaction.id}\n              text={transaction.text}\n              amount={transaction.amount}\n              option={transaction.option}\n              date={transaction.date}\n              category={transaction.category}\n            />\n          </div>\n        ) : null;\n      })}\n    </div>\n  );\n};\n\nexport const CategoryEntertainmentFilter = () => {\n  const [transactions] = useContext(TransactionsContext);\n  const transactionsValues = Object.values(transactions);\n  const sumTransactionValues = transactionsValues\n    .reverse()\n    .map((transaction) => transaction.amount);\n  return (\n    <div className=\"table\">\n      {transactionsValues.map((transaction, key) => {\n        return transaction.category === \"entertainment\" ? (\n          <div key={key}>\n            <TransactionRow\n              key={transaction.id}\n              text={transaction.text}\n              amount={transaction.amount}\n              option={transaction.option}\n              date={transaction.date}\n              category={transaction.category}\n            />\n          </div>\n        ) : null;\n      })}\n    </div>\n  );\n};\n\nexport const CategoryMiscFilter = () => {\n  const [transactions] = useContext(TransactionsContext);\n  const transactionsValues = Object.values(transactions);\n  const sumTransactionValues = transactionsValues\n    .reverse()\n    .map((transaction) => transaction.amount);\n  return (\n    <div className=\"table\">\n      {transactionsValues.map((transaction, key) => {\n        return transaction.category === \"misc\" ? (\n          <div key={key}>\n            <TransactionRow\n              key={transaction.id}\n              text={transaction.text}\n              amount={transaction.amount}\n              option={transaction.option}\n              date={transaction.date}\n              category={transaction.category}\n            />\n          </div>\n        ) : null;\n      })}\n    </div>\n  );\n};\n\nexport const CategorySavingsFilter = () => {\n  const [transactions] = useContext(TransactionsContext);\n  const transactionsValues = Object.values(transactions);\n  const sumTransactionValues = transactionsValues\n    .reverse()\n    .map((transaction) => transaction.amount);\n  return (\n    <div className=\"table\">\n      {transactionsValues.map((transaction, key) => {\n        return transaction.category === \"savings\" ? (\n          <div key={key}>\n            <TransactionRow\n              key={transaction.id}\n              text={transaction.text}\n              amount={transaction.amount}\n              option={transaction.option}\n              date={transaction.date}\n              category={transaction.category}\n            />\n          </div>\n        ) : null;\n      })}\n    </div>\n  );\n};\n\n// //FILTER BY TIME\n// export const thisMonthFilter = (\n//   <div className=\"table\">\n//     {transactionsValues.map((transaction, key) => {\n//       return transaction.category === \"saving\" ? (\n//         <div key={key}>\n//           <TransactionRow\n//             key={transaction.id}\n//             text={transaction.text}\n//             amount={transaction.amount}\n//             option={transaction.option}\n//             date={transaction.date}\n//             category={transaction.category}\n//           />\n//         </div>\n//       ) : null;\n//     })}\n//   </div>\n// );\n","/Users/bartpiasek/lazybudget/lazybugetapp/src/context/CashflowContext.js",["165","166"],"/Users/bartpiasek/lazybudget/lazybugetapp/src/context/LocalStorage.js",["167"],{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":8,"column":8,"nodeType":"174","messageId":"175","endLine":8,"endColumn":22},{"ruleId":"172","severity":1,"message":"176","line":1,"column":39,"nodeType":"174","messageId":"175","endLine":1,"endColumn":45},{"ruleId":"172","severity":1,"message":"177","line":3,"column":16,"nodeType":"174","messageId":"175","endLine":3,"endColumn":22},{"ruleId":"172","severity":1,"message":"178","line":3,"column":24,"nodeType":"174","messageId":"175","endLine":3,"endColumn":37},{"ruleId":"172","severity":1,"message":"179","line":14,"column":10,"nodeType":"174","messageId":"175","endLine":14,"endColumn":15},{"ruleId":"180","severity":1,"message":"181","line":1,"column":1,"nodeType":"182","endLine":20,"endColumn":3},{"ruleId":"172","severity":1,"message":"183","line":34,"column":9,"nodeType":"174","messageId":"175","endLine":34,"endColumn":29},{"ruleId":"172","severity":1,"message":"184","line":1,"column":47,"nodeType":"174","messageId":"175","endLine":1,"endColumn":57},{"ruleId":"185","severity":1,"message":"186","line":89,"column":11,"nodeType":"187","endLine":89,"endColumn":33},{"ruleId":"185","severity":1,"message":"186","line":108,"column":17,"nodeType":"187","endLine":108,"endColumn":28},{"ruleId":"185","severity":1,"message":"186","line":110,"column":22,"nodeType":"187","endLine":110,"endColumn":33},{"ruleId":"172","severity":1,"message":"188","line":1,"column":29,"nodeType":"174","messageId":"175","endLine":1,"endColumn":37},{"ruleId":"172","severity":1,"message":"189","line":17,"column":10,"nodeType":"174","messageId":"175","endLine":17,"endColumn":22},{"ruleId":"172","severity":1,"message":"190","line":23,"column":5,"nodeType":"174","messageId":"175","endLine":23,"endColumn":15},{"ruleId":"172","severity":1,"message":"191","line":24,"column":5,"nodeType":"174","messageId":"175","endLine":24,"endColumn":18},{"ruleId":"172","severity":1,"message":"179","line":6,"column":10,"nodeType":"174","messageId":"175","endLine":6,"endColumn":15},{"ruleId":"172","severity":1,"message":"192","line":7,"column":10,"nodeType":"174","messageId":"175","endLine":7,"endColumn":18},{"ruleId":"172","severity":1,"message":"193","line":10,"column":9,"nodeType":"174","messageId":"175","endLine":10,"endColumn":27},{"ruleId":"172","severity":1,"message":"194","line":4,"column":8,"nodeType":"174","messageId":"175","endLine":4,"endColumn":19},{"ruleId":"172","severity":1,"message":"183","line":10,"column":9,"nodeType":"174","messageId":"175","endLine":10,"endColumn":29},{"ruleId":"172","severity":1,"message":"195","line":21,"column":9,"nodeType":"174","messageId":"175","endLine":21,"endColumn":31},{"ruleId":"172","severity":1,"message":"183","line":10,"column":9,"nodeType":"174","messageId":"175","endLine":10,"endColumn":29},{"ruleId":"172","severity":1,"message":"183","line":36,"column":9,"nodeType":"174","messageId":"175","endLine":36,"endColumn":29},{"ruleId":"172","severity":1,"message":"183","line":62,"column":9,"nodeType":"174","messageId":"175","endLine":62,"endColumn":29},{"ruleId":"172","severity":1,"message":"183","line":89,"column":9,"nodeType":"174","messageId":"175","endLine":89,"endColumn":29},{"ruleId":"172","severity":1,"message":"183","line":115,"column":9,"nodeType":"174","messageId":"175","endLine":115,"endColumn":29},{"ruleId":"172","severity":1,"message":"183","line":141,"column":9,"nodeType":"174","messageId":"175","endLine":141,"endColumn":29},{"ruleId":"172","severity":1,"message":"183","line":167,"column":9,"nodeType":"174","messageId":"175","endLine":167,"endColumn":29},{"ruleId":"172","severity":1,"message":"183","line":193,"column":9,"nodeType":"174","messageId":"175","endLine":193,"endColumn":29},{"ruleId":"172","severity":1,"message":"183","line":219,"column":9,"nodeType":"174","messageId":"175","endLine":219,"endColumn":29},{"ruleId":"172","severity":1,"message":"196","line":1,"column":42,"nodeType":"174","messageId":"175","endLine":1,"endColumn":51},{"ruleId":"172","severity":1,"message":"197","line":2,"column":10,"nodeType":"174","messageId":"175","endLine":2,"endColumn":25},{"ruleId":"172","severity":1,"message":"198","line":1,"column":8,"nodeType":"174","messageId":"175","endLine":1,"endColumn":13},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],"no-unused-vars","'DarkModeToggle' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'Salary' is defined but never used.","'Subscriptions' is defined but never used.","'error' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'sumTransactionValues' is assigned a value but never used.","'useReducer' is defined but never used.","jsx-a11y/aria-role","Elements with ARIA roles must use a valid, non-abstract ARIA role.","JSXAttribute","'useState' is defined but never used.","'transactions' is assigned a value but never used.","'savingGoal' is assigned a value but never used.","'setSavingGoal' is assigned a value but never used.","'isLoaded' is assigned a value but never used.","'transactionsValues' is assigned a value but never used.","'ProgressBar' is defined but never used.","'savingsListTransaction' is assigned a value but never used.","'useEffect' is defined but never used.","'useLocalStorage' is defined but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]