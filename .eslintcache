[{"/Users/bartpiasek/lazybudget/lazybugetapp/src/index.js":"1","/Users/bartpiasek/lazybudget/lazybugetapp/src/App.js":"2","/Users/bartpiasek/lazybudget/lazybugetapp/src/context/GlobalState.js":"3","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Layout/Layout.js":"4","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Main/LazyInput/LazyInput.js":"5","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Navigation/Navbar/Navbar.js":"6","/Users/bartpiasek/lazybudget/lazybugetapp/src/context/AppReducer.js":"7","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Main/Summary/Summary.js":"8","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/History/History.js":"9","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Main/LazyInput/Data.js":"10","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/History/TrUI.js":"11","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Main/Form/AddTransactionForm.js":"12","/Users/bartpiasek/lazybudget/lazybugetapp/src/axios.js":"13","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Main/Cashflow/Cashflow.js":"14","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/DarkMode/DarkModeToggle.js":"15","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/DarkMode/Toggle.js":"16","/Users/bartpiasek/lazybudget/lazybugetapp/src/auth/signup.js":"17","/Users/bartpiasek/lazybudget/lazybugetapp/src/context/Auth.js":"18","/Users/bartpiasek/lazybudget/lazybugetapp/src/auth/firebase.js":"19","/Users/bartpiasek/lazybudget/lazybugetapp/src/auth/login.js":"20","/Users/bartpiasek/lazybudget/lazybugetapp/src/auth/privateRoute.js":"21"},{"size":244,"mtime":1616693317072,"results":"22","hashOfConfig":"23"},{"size":1118,"mtime":1618342267804,"results":"24","hashOfConfig":"23"},{"size":911,"mtime":1613500807697,"results":"25","hashOfConfig":"23"},{"size":602,"mtime":1618427400756,"results":"26","hashOfConfig":"23"},{"size":3360,"mtime":1617571603644,"results":"27","hashOfConfig":"23"},{"size":2033,"mtime":1618429159559,"results":"28","hashOfConfig":"23"},{"size":536,"mtime":1611774066646,"results":"29","hashOfConfig":"23"},{"size":709,"mtime":1617560837419,"results":"30","hashOfConfig":"23"},{"size":2694,"mtime":1617560853606,"results":"31","hashOfConfig":"23"},{"size":338,"mtime":1614029135927,"results":"32","hashOfConfig":"23"},{"size":804,"mtime":1618428546001,"results":"33","hashOfConfig":"23"},{"size":2887,"mtime":1618171260469,"results":"34","hashOfConfig":"23"},{"size":151,"mtime":1614627227358,"results":"35","hashOfConfig":"23"},{"size":763,"mtime":1617470095436,"results":"36","hashOfConfig":"23"},{"size":558,"mtime":1612024356208,"results":"37","hashOfConfig":"23"},{"size":312,"mtime":1612018980962,"results":"38","hashOfConfig":"23"},{"size":3144,"mtime":1618344869163,"results":"39","hashOfConfig":"23"},{"size":1401,"mtime":1618168847624,"results":"40","hashOfConfig":"23"},{"size":587,"mtime":1618090458099,"results":"41","hashOfConfig":"23"},{"size":2529,"mtime":1618344849181,"results":"42","hashOfConfig":"23"},{"size":471,"mtime":1618342353033,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1bur3ci",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"46"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/Users/bartpiasek/lazybudget/lazybugetapp/src/index.js",[],["95","96"],"/Users/bartpiasek/lazybudget/lazybugetapp/src/App.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/context/GlobalState.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Layout/Layout.js",["97"],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Main/LazyInput/LazyInput.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Navigation/Navbar/Navbar.js",["98","99"],"/Users/bartpiasek/lazybudget/lazybugetapp/src/context/AppReducer.js",["100"],"export default (state, action) => {\n  switch (action.type) {\n    case \"DELETE_TRANSACTION\":\n      return {\n        ...state,\n        // send state without element with removed id\n        transactions: state.transactions.filter(\n          (transaction) => transaction.id !== action.payload\n        ),\n      };\n    case \"ADD_TRANSACTION\":\n      return {\n        ...state,\n        // action.payload - This is a new transaction\n        transactions: [action.payload, ...state.transactions],\n      };\n    default:\n      return state;\n  }\n};\n","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Main/Summary/Summary.js",["101","102"],"import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../../../context/GlobalState\";\nimport { Form } from \"../Form/AddTransactionForm\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst Summary = () => {\n  // const { transactions } = useContext(GlobalContext);\n\n  // const amounts = transactions.map((transaction) => transaction.amount);\n  // const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n\n  return (\n    <Container>\n      <Row>\n        <Col sm={4}></Col>\n        <Col sm={8}>\n          <Form />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Summary;\n","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/History/History.js",["103","104","105","106"],"import React, { useState, useEffect } from \"react\";\n\nimport TransactionRow from \"./TrUI\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst History = () => {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [transactions, setTransactions] = useState({});\n\n  useEffect(() => {\n    fetch(\"https://lazyinput-default-rtdb.firebaseio.com/transactions.json\")\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setTransactions(result);\n        },\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      );\n  }, []);\n\n  const transactionsObj = Object.values(transactions);\n\n  const transactionsAmount = transactionsObj\n    .reverse()\n    .map((transaction) => transaction.amount);\n\n  const total = transactionsAmount.reduce((a, b) => a + b, 0);\n\n  const expenses = transactionsAmount\n    .filter((amount) => amount < 0)\n    .reduce((a, b) => a + b, 0);\n\n  const incomes = transactionsAmount\n    .filter((amount) => amount > 0)\n    .reduce((a, b) => a + b, 0);\n\n  //FILTER TRANSACTION OBJ - EXPENSES/INCOMES - sorting\n  const firebaseExpenses = transactionsObj.filter((transaction) => {\n    return transaction.amount < 0;\n  });\n\n  const firebaseIncomes = transactionsObj.filter((transaction) => {\n    return transaction.amount > 0;\n  });\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h5>Total balance</h5>\n          <h2>{total.toFixed(2)} PLN</h2>\n        </Col>\n        <Col>\n          <h5>Expenses</h5>\n          <h2>{Math.abs(expenses).toFixed(2)} PLN</h2>\n        </Col>\n        <Col>\n          <h5>Incomes</h5>\n          <h2>{incomes.toFixed(2)} PLN</h2>\n        </Col>\n      </Row>\n      <Row>\n        <Col></Col>\n        <Col></Col>\n      </Row>\n      <Row>\n        <Col>\n          <div>\n            <hr />\n            <div>\n              <div>\n                <h5>Last transactions</h5>\n                <div>\n                  {transactionsObj.map((transaction, key) => {\n                    return (\n                      <div key={key}>\n                        <TransactionRow\n                          key={transaction.id}\n                          text={transaction.text}\n                          amount={transaction.amount}\n                          option={transaction.option}\n                        />\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            </div>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default History;\n","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Main/LazyInput/Data.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/History/TrUI.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Main/Form/AddTransactionForm.js",["107","108"],"import React, { useState, useContext, useEffect, useRef } from \"react\";\nimport { GlobalContext } from \"../../../context/GlobalState\";\nimport { useAuth } from \"../../../context/Auth\";\nimport axios from \"../../../axios\";\nimport \"../../classes.css\";\n\nimport FormBootstrap from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nexport const Form = () => {\n  const [text, setText] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n  const [option, setOption] = useState(\"expense\");\n  const inputRef = useRef();\n\n  const options = [\n    { label: \"Income\", value: \"income\", key: \"1\" },\n    { label: \"Expense\", value: \"expense\", key: \"2\" },\n  ];\n\n  const { addTransaction } = useContext(GlobalContext);\n\n  //RE-RENDERS IN INPUT FORM\n  // useEffect(() => {\n  //   setTimeout(() => {}, 400);\n  // });\n\n  const newExpenseTransaction = {\n    id: Math.floor(Math.random() * 10000),\n    text,\n    amount: -Math.abs(amount),\n    option,\n  };\n\n  const newIncomeTransaction = {\n    id: Math.floor(Math.random() * 10000),\n    text,\n    amount: parseInt(amount),\n    option,\n  };\n\n  const onSubmit = (e) => {\n    axios\n      .post(\n        \"/transactions.json\",\n        option === \"expense\"\n          ? Object.assign(newExpenseTransaction)\n          : Object.assign(newIncomeTransaction)\n      )\n      .then((response) => console.log(response))\n      .catch((error) => console.log(error));\n    e.preventDefault();\n\n    option === \"expense\"\n      ? addTransaction(newExpenseTransaction)\n      : addTransaction(newIncomeTransaction);\n  };\n\n  return (\n    <FormBootstrap className=\"form\" onSubmit={onSubmit}>\n      <FormBootstrap.Group>\n        <FormBootstrap.Control\n          size=\"lg\"\n          placeholder=\"Name\"\n          className=\"layout__container-background\"\n          ref={inputRef}\n          type=\"text\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n      </FormBootstrap.Group>\n      <FormBootstrap.Group>\n        <FormBootstrap.Control\n          size=\"lg\"\n          placeholder=\"PLN\"\n          className=\"layout__container-background\"\n          type=\"text\"\n          value={amount}\n          onChange={(e) => setAmount(e.target.value)}\n        />\n      </FormBootstrap.Group>\n      <FormBootstrap.Group>\n        <select\n          as=\"select\"\n          size=\"lg\"\n          className=\"layout__select\"\n          value={option}\n          onChange={(e) => setOption(e.target.value)}\n        >\n          {options.map((option) => (\n            <option\n              className=\"layout__select\"\n              key={option.key}\n              value={option.value}\n            >\n              {option.label}\n            </option>\n          ))}\n        </select>\n      </FormBootstrap.Group>\n      <Button className=\"button\" variant=\"primary\" type=\"submit\" value=\"Send\">\n        Add\n      </Button>\n      <hr />\n    </FormBootstrap>\n  );\n};\n","/Users/bartpiasek/lazybudget/lazybugetapp/src/axios.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Main/Cashflow/Cashflow.js",["109"],"import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../../../context/GlobalState\";\n\nexport const Cashflow = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map((transaction) => transaction.amount);\n\n  const expense = (\n    amounts.filter((item) => item < 0).reduce((acc, item) => (acc += item), 0) *\n    -1\n  ).toFixed(2);\n\n  const income = amounts\n    .filter((item) => item > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  const total = (expense - income).toFixed(2);\n\n  return (\n    <div>\n      <div>\n        <h5>Expenses</h5>\n        <h2>{expense} PLN</h2>\n        <h5>Incomes</h5>\n        <h2>{income} PLN</h2>\n      </div>\n    </div>\n  );\n};\n\nexport default Cashflow;\n",["110","111"],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/DarkMode/DarkModeToggle.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/DarkMode/Toggle.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/auth/signup.js",["112"],"import React, { useState, useEffect, useRef } from \"react\";\nimport \"../components/classes.css\";\nimport { useAuth } from \"../context/Auth\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Alert from \"react-bootstrap/Alert\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nconst Signup = () => {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const { signup, currentUser } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords don't match\");\n    }\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await signup(emailRef.current.value, passwordRef.current.value);\n      history.push(\"/\");\n    } catch {\n      setError(\"Failed to create an account\");\n    }\n    setLoading(false);\n  }\n\n  return (\n    <Container>\n      <Row>\n        <Col></Col>\n        <Col md={6}>\n          <Card>\n            <h2>Sign Up</h2>\n            {currentUser ? (\n              <p>\n                Logged in as\n                <strong>{currentUser && currentUser.email}</strong>\n              </p>\n            ) : null}\n            <Form onSubmit={handleSubmit} className=\"form\">\n              {error && <Alert variant=\"danger\">{error}</Alert>}\n              <Form.Group id=\"email\">\n                <Form.Control\n                  size=\"lg\"\n                  placeholder=\"Email\"\n                  className=\"layout__container-background\"\n                  type=\"email\"\n                  required\n                  ref={emailRef}\n                />\n              </Form.Group>\n              <Form.Group id=\"password\">\n                <Form.Control\n                  size=\"lg\"\n                  placeholder=\"Password\"\n                  className=\"layout__container-background\"\n                  type=\"password\"\n                  required\n                  ref={passwordRef}\n                />\n              </Form.Group>\n              <Form.Group id=\"password-confirm\">\n                <Form.Control\n                  size=\"lg\"\n                  placeholder=\"Confirm password\"\n                  className=\"layout__container-background\"\n                  type=\"password\"\n                  required\n                  ref={passwordConfirmRef}\n                />\n              </Form.Group>\n              <Button disabled={loading} className=\"button\" type=\"submit\">\n                Sign Up\n              </Button>\n            </Form>\n            <hr />\n            <div>\n              Already have an account? <Link to=\"/login\">Log In</Link>\n            </div>\n            <h5>or</h5>\n            <div>Use as anonymous</div>\n          </Card>\n        </Col>\n        <Col></Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Signup;\n","/Users/bartpiasek/lazybudget/lazybugetapp/src/context/Auth.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/auth/firebase.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/auth/login.js",["113"],"import React, { useState, useEffect, useRef } from \"react\";\nimport \"../components/classes.css\";\nimport { useAuth } from \"../context/Auth\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Alert from \"react-bootstrap/Alert\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nconst Login = () => {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const { currentUser, login } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await login(emailRef.current.value, passwordRef.current.value);\n      history.push(\"/\");\n    } catch {\n      setError(\"Failed to log in\");\n    }\n    setLoading(false);\n  }\n\n  return (\n    <Container>\n      <Row>\n        <Col></Col>\n        <Col md={6}>\n          <Card>\n            <h2>Log In</h2>\n            {currentUser ? (\n              <p>\n                Logged in as\n                <strong>{currentUser && currentUser.email}</strong>\n              </p>\n            ) : null}\n            <Form onSubmit={handleSubmit} className=\"form\">\n              {error && <Alert variant=\"danger\">{error}</Alert>}\n              <Form.Group id=\"email\">\n                <Form.Control\n                  size=\"lg\"\n                  placeholder=\"Email\"\n                  className=\"layout__container-background\"\n                  type=\"email\"\n                  required\n                  ref={emailRef}\n                />\n              </Form.Group>\n              <Form.Group id=\"password\">\n                <Form.Control\n                  size=\"lg\"\n                  placeholder=\"Password\"\n                  className=\"layout__container-background\"\n                  type=\"password\"\n                  required\n                  ref={passwordRef}\n                />\n              </Form.Group>\n              <Button disabled={loading} className=\"button\" type=\"submit\">\n                Log In\n              </Button>\n            </Form>\n            <hr />\n            <div>\n              Don't have an account? <Link to=\"/signup\">Sign Up</Link>\n            </div>\n          </Card>\n        </Col>\n        <Col></Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Login;\n","/Users/bartpiasek/lazybudget/lazybugetapp/src/auth/privateRoute.js",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":12,"column":11,"nodeType":"120","messageId":"121","endLine":12,"endColumn":22},{"ruleId":"118","severity":1,"message":"122","line":13,"column":9,"nodeType":"120","messageId":"121","endLine":13,"endColumn":22},{"ruleId":"118","severity":1,"message":"123","line":14,"column":10,"nodeType":"120","messageId":"121","endLine":14,"endColumn":15},{"ruleId":"124","severity":1,"message":"125","line":1,"column":1,"nodeType":"126","endLine":20,"endColumn":3},{"ruleId":"118","severity":1,"message":"127","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":27},{"ruleId":"118","severity":1,"message":"128","line":2,"column":10,"nodeType":"120","messageId":"121","endLine":2,"endColumn":23},{"ruleId":"118","severity":1,"message":"123","line":9,"column":10,"nodeType":"120","messageId":"121","endLine":9,"endColumn":15},{"ruleId":"118","severity":1,"message":"129","line":10,"column":10,"nodeType":"120","messageId":"121","endLine":10,"endColumn":18},{"ruleId":"118","severity":1,"message":"130","line":45,"column":9,"nodeType":"120","messageId":"121","endLine":45,"endColumn":25},{"ruleId":"118","severity":1,"message":"131","line":49,"column":9,"nodeType":"120","messageId":"121","endLine":49,"endColumn":24},{"ruleId":"118","severity":1,"message":"132","line":1,"column":39,"nodeType":"120","messageId":"121","endLine":1,"endColumn":48},{"ruleId":"118","severity":1,"message":"133","line":3,"column":10,"nodeType":"120","messageId":"121","endLine":3,"endColumn":17},{"ruleId":"118","severity":1,"message":"134","line":19,"column":9,"nodeType":"120","messageId":"121","endLine":19,"endColumn":14},{"ruleId":"114","replacedBy":"135"},{"ruleId":"116","replacedBy":"136"},{"ruleId":"118","severity":1,"message":"132","line":1,"column":27,"nodeType":"120","messageId":"121","endLine":1,"endColumn":36},{"ruleId":"118","severity":1,"message":"132","line":1,"column":27,"nodeType":"120","messageId":"121","endLine":1,"endColumn":36},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'currentUser' is assigned a value but never used.","Identifier","unusedVar","'handleClicked' is assigned a value but never used.","'error' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useContext' is defined but never used.","'GlobalContext' is defined but never used.","'isLoaded' is assigned a value but never used.","'firebaseExpenses' is assigned a value but never used.","'firebaseIncomes' is assigned a value but never used.","'useEffect' is defined but never used.","'useAuth' is defined but never used.","'total' is assigned a value but never used.",["137"],["138"],"no-global-assign","no-unsafe-negation"]