[{"/Users/bartpiasek/lazybudget/lazybugetapp/src/index.js":"1","/Users/bartpiasek/lazybudget/lazybugetapp/src/App.js":"2","/Users/bartpiasek/lazybudget/lazybugetapp/src/context/GlobalState.js":"3","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Layout/Layout.js":"4","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Main/LazyInput/LazyInput.js":"5","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Navigation/Navbar/Navbar.js":"6","/Users/bartpiasek/lazybudget/lazybugetapp/src/context/AppReducer.js":"7","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/History/History.js":"8","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Main/LazyInput/Data.js":"9","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Main/Form/AddTransactionForm.js":"10","/Users/bartpiasek/lazybudget/lazybugetapp/src/axios.js":"11","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/DarkMode/DarkModeToggle.js":"12","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/DarkMode/Toggle.js":"13","/Users/bartpiasek/lazybudget/lazybugetapp/src/auth/signup.js":"14","/Users/bartpiasek/lazybudget/lazybugetapp/src/context/Auth.js":"15","/Users/bartpiasek/lazybudget/lazybugetapp/src/auth/firebase.js":"16","/Users/bartpiasek/lazybudget/lazybugetapp/src/auth/login.js":"17","/Users/bartpiasek/lazybudget/lazybugetapp/src/auth/privateRoute.js":"18","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/History/TransactionUI.js":"19","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Analytics/Dashboard.js":"20","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Analytics/Total.js":"21","/Users/bartpiasek/lazybudget/lazybugetapp/src/context/TransactionListContext.js":"22","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Analytics/Expenses.js":"23","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Analytics/Incomes.js":"24","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Analytics/Savings.js":"25","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Main/data.js":"26","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Main/Data.js":"27","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/History/HistoryFilters.js":"28"},{"size":244,"mtime":1616693317072,"results":"29","hashOfConfig":"30"},{"size":1365,"mtime":1625993781400,"results":"31","hashOfConfig":"30"},{"size":911,"mtime":1625432923386,"results":"32","hashOfConfig":"30"},{"size":504,"mtime":1625906609261,"results":"33","hashOfConfig":"30"},{"size":1710,"mtime":1625859443080,"results":"34","hashOfConfig":"30"},{"size":2884,"mtime":1625993898542,"results":"35","hashOfConfig":"30"},{"size":536,"mtime":1625432928342,"results":"36","hashOfConfig":"30"},{"size":5621,"mtime":1625991944303,"results":"37","hashOfConfig":"30"},{"size":338,"mtime":1614029135927,"results":"38","hashOfConfig":"30"},{"size":3695,"mtime":1625859387200,"results":"39","hashOfConfig":"30"},{"size":151,"mtime":1614627227358,"results":"40","hashOfConfig":"30"},{"size":548,"mtime":1625993069463,"results":"41","hashOfConfig":"30"},{"size":312,"mtime":1612018980962,"results":"42","hashOfConfig":"30"},{"size":3133,"mtime":1618863222359,"results":"43","hashOfConfig":"30"},{"size":1401,"mtime":1618168847624,"results":"44","hashOfConfig":"30"},{"size":587,"mtime":1623702412234,"results":"45","hashOfConfig":"30"},{"size":2518,"mtime":1625860382694,"results":"46","hashOfConfig":"30"},{"size":471,"mtime":1618342353033,"results":"47","hashOfConfig":"30"},{"size":889,"mtime":1623485806665,"results":"48","hashOfConfig":"30"},{"size":2967,"mtime":1625859330669,"results":"49","hashOfConfig":"30"},{"size":599,"mtime":1625859344110,"results":"50","hashOfConfig":"30"},{"size":952,"mtime":1625914709332,"results":"51","hashOfConfig":"30"},{"size":948,"mtime":1625518242555,"results":"52","hashOfConfig":"30"},{"size":914,"mtime":1625518259049,"results":"53","hashOfConfig":"30"},{"size":1236,"mtime":1625686137617,"results":"54","hashOfConfig":"30"},{"size":468,"mtime":1625859380220,"results":"55","hashOfConfig":"30"},{"size":470,"mtime":1625946509284,"results":"56","hashOfConfig":"30"},{"size":8839,"mtime":1625946519057,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1bur3ci",{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"60"},"/Users/bartpiasek/lazybudget/lazybugetapp/src/index.js",[],["123","124"],"/Users/bartpiasek/lazybudget/lazybugetapp/src/App.js",["125"],"import React from \"react\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\n\nimport Layout from \"./components/Layout/Layout\";\nimport LazyInput from \"./components/Main/LazyInput/LazyInput\";\nimport Navbar from \"./components/Navigation/Navbar/Navbar\";\n\nimport DarkModeToggle from \"../src/components/DarkMode/DarkModeToggle\";\n\nimport \"../src/components/classes.css\";\n\nimport { GlobalProvider } from \"./context/GlobalState\";\nimport { AuthProvider } from \"../src/context/Auth\";\nimport Signup from \"./auth/signup\";\nimport Login from \"./auth/login\";\nimport PrivateRoute from \"../src/auth/privateRoute\";\nimport Dashboard from \"./components/Analytics/Dashboard\";\nimport { TransactionsProvider } from \"./context/TransactionListContext\";\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <GlobalProvider>\n        <TransactionsProvider>\n          <Router>\n            <Navbar />\n            <Switch>\n              <PrivateRoute exact path=\"/\" component={Layout} />\n              <Route path=\"/lazy\" component={LazyInput} />\n              <Route path=\"/signup\" component={Signup} />\n              <Route path=\"/login\" component={Login} />\n              <Route path=\"/analytics\" component={Dashboard} />\n            </Switch>\n          </Router>\n        </TransactionsProvider>\n      </GlobalProvider>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","/Users/bartpiasek/lazybudget/lazybugetapp/src/context/GlobalState.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Layout/Layout.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Main/LazyInput/LazyInput.js",["126","127","128"],"import React, { useState, useContext } from \"react\";\nimport { GlobalContext } from \"../../../context/GlobalState\";\nimport { Rent, Salary, Subscriptions } from \"./Data\";\nimport \"../../classes.css\";\n\nimport FormBootstrap from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\n\nexport const LazyInput = () => {\n  const [state, setState] = useState();\n\n  const { addTransaction } = useContext(GlobalContext);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    const newTransaction = {\n      id: Math.floor(Math.random() * 10000),\n      text: state.text,\n      amount: state.amount,\n      option: state.option,\n    };\n    addTransaction(newTransaction);\n    console.log(addTransaction);\n  };\n\n  return (\n    <Container>\n      <Row md={4}>\n        <Col>\n          <CardDeck>\n            <Card className=\"lazy__container-background\" onSubmit={onSubmit}>\n              <div\n                value={(Salary.option, Salary.amount, Salary.text)}\n                onClick={(e) => setState(Salary)}\n              >\n                <Card.Body>\n                  <Card.Title>{Salary.text}</Card.Title>\n                  <Card.Text>{Salary.amount} PLN</Card.Text>\n                </Card.Body>\n                <Button type=\"submit\" value=\"Send\">\n                  Add\n                </Button>\n              </div>\n            </Card>\n          </CardDeck>\n        </Col>\n        <Col xs={6}></Col>\n        <Col></Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default LazyInput;\n","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Navigation/Navbar/Navbar.js",["129"],"/Users/bartpiasek/lazybudget/lazybugetapp/src/context/AppReducer.js",["130"],"export default (state, action) => {\n  switch (action.type) {\n    case \"DELETE_TRANSACTION\":\n      return {\n        ...state,\n        // send state without element with removed id\n        transactions: state.transactions.filter(\n          (transaction) => transaction.id !== action.payload\n        ),\n      };\n    case \"ADD_TRANSACTION\":\n      return {\n        ...state,\n        // action.payload - This is a new transaction\n        transactions: [action.payload, ...state.transactions],\n      };\n    default:\n      return state;\n  }\n};\n","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/History/History.js",["131","132","133"],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Main/LazyInput/Data.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Main/Form/AddTransactionForm.js",["134","135","136"],"import React, { useState, useContext, useRef, useReducer } from \"react\";\nimport { options, categories } from \"../Data\";\nimport { GlobalContext } from \"../../../context/GlobalState\";\nimport axios from \"../../../axios\";\nimport \"../../classes.css\";\n\nimport FormBootstrap from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nexport const Form = () => {\n  const [text, setText] = useState(\"\");\n  const [amount, setAmount] = useState();\n  const [option, setOption] = useState(\"expense\");\n  const [date, setDate] = useState(\"\");\n  const [category, setCategory] = useState();\n\n  const inputRef = useRef();\n\n  const { addTransaction } = useContext(GlobalContext);\n\n  const newExpenseTransaction = {\n    id: Math.floor(Math.random() * 10000),\n    text,\n    amount: -Math.abs(amount),\n    option,\n    date: new Date().toISOString(),\n    category,\n  };\n\n  const newIncomeTransaction = {\n    id: Math.floor(Math.random() * 10000),\n    text,\n    amount: parseInt(amount),\n    option,\n    date: new Date().toISOString(),\n    category,\n  };\n\n  const onSubmit = (e) => {\n    axios\n      .post(\n        \"/transactions.json\",\n        option === \"expense\"\n          ? Object.assign(newExpenseTransaction)\n          : Object.assign(newIncomeTransaction)\n      )\n      .then((response) => console.log(response))\n      .catch((error) => console.log(error));\n    e.preventDefault();\n\n    option === \"expense\"\n      ? addTransaction(newExpenseTransaction)\n      : addTransaction(newIncomeTransaction);\n  };\n\n  return (\n    <FormBootstrap className=\"form\" onSubmit={onSubmit}>\n      <FormBootstrap.Group>\n        <FormBootstrap.Control\n          required\n          size=\"lg\"\n          placeholder=\"Name\"\n          className=\"layout__container-background\"\n          ref={inputRef}\n          type=\"text\"\n          value={text}\n          role=\"text-input\"\n          onChange={(e) => setText(e.target.value)}\n        />\n      </FormBootstrap.Group>\n      <FormBootstrap.Group>\n        <FormBootstrap.Control\n          required\n          size=\"lg\"\n          placeholder=\"PLN\"\n          className=\"layout__container-background\"\n          type=\"text\"\n          value={amount}\n          role=\"amount-input\"\n          onChange={(e) => setAmount(e.target.value)}\n        />\n      </FormBootstrap.Group>\n      <FormBootstrap.Group>\n        <select\n          as=\"select\"\n          size=\"lg\"\n          className=\"layout__select\"\n          value={option}\n          role=\"cashflow-select\"\n          onChange={(e) => setOption(e.target.value)}\n        >\n          {options.map((option) => (\n            <option\n              className=\"layout__select\"\n              key={option.key}\n              value={option.value}\n            >\n              {option.label}\n            </option>\n          ))}\n        </select>\n      </FormBootstrap.Group>\n      <FormBootstrap.Group>\n        <radio value={category} onChange={(e) => setCategory(e.target.value)}>\n          {categories.map((category) => (\n            <FormBootstrap.Check inline>\n              <input\n                name=\"selection\"\n                type=\"radio\"\n                key={category.key}\n                value={category.value}\n                role=\"radio\"\n              />\n              <label className=\"button-sort\">{category.label}</label>\n            </FormBootstrap.Check>\n          ))}\n        </radio>\n      </FormBootstrap.Group>\n      <FormBootstrap.Group></FormBootstrap.Group>\n      <Button\n        variant=\"flat\"\n        className=\"button\"\n        type=\"submit\"\n        value={date.value}\n        key={date.key}\n        onClick={(e) => setDate(e.target.value)}\n      >\n        Add\n      </Button>\n      <hr />\n    </FormBootstrap>\n  );\n};\n","/Users/bartpiasek/lazybudget/lazybugetapp/src/axios.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/DarkMode/DarkModeToggle.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/DarkMode/Toggle.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/auth/signup.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/context/Auth.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/auth/firebase.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/auth/login.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/auth/privateRoute.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/History/TransactionUI.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Analytics/Dashboard.js",["137"],"import React, { useContext, useState } from \"react\";\nimport { TransactionsContext } from \"../../context/TransactionListContext\";\nimport Expenses from \"./Expenses\";\nimport Incomes from \"./Incomes\";\nimport Total from \"./Total\";\nimport Savings from \"./Savings\";\nimport \"../classes.css\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport FormBootstrap from \"react-bootstrap/Form\";\n\nconst Dashboard = () => {\n  const [transactions] = useContext(TransactionsContext);\n\n  const [incomeGoal, setIncomeGoal] = useState({});\n  const [expenseGoal, setExpenseGoal] = useState({});\n  const [savingGoal, setSavingGoal] = useState({});\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <Total />\n        </Col>\n        <Col>\n          <Expenses />\n        </Col>\n        <Col>\n          <Incomes />\n        </Col>\n        <Col>\n          <Savings />\n        </Col>\n      </Row>\n      <hr />\n      <Row>\n        <Col>\n          <h5>Goals</h5>\n          <FormBootstrap.Group>\n            <p>Your current goal:</p>\n            <FormBootstrap.Control\n              required\n              size=\"sm\"\n              placeholder=\"Set new goal\"\n              className=\"layout__container-background\"\n              type=\"text\"\n              value={expenseGoal.value}\n              role=\"setexpenses-input\"\n            />\n            <Button\n              onClick={(e) => setExpenseGoal(e.target.value)}\n              variant=\"flat\"\n              className=\"button\"\n            >\n              Save\n            </Button>\n          </FormBootstrap.Group>\n          <FormBootstrap.Group>\n            <p>Your current goal:</p>\n            <FormBootstrap.Control\n              required\n              size=\"sm\"\n              placeholder=\"Set new goal\"\n              className=\"layout__container-background\"\n              type=\"text\"\n              value={incomeGoal.value}\n              role=\"setincomes-input\"\n            />\n            <Button\n              onClick={(e) => setIncomeGoal(e.target.value)}\n              variant=\"flat\"\n              className=\"button\"\n            >\n              Save\n            </Button>\n          </FormBootstrap.Group>\n          <FormBootstrap.Group>\n            <p>Your current goal:</p>\n            <FormBootstrap.Control\n              required\n              size=\"sm\"\n              placeholder=\"Set new goal\"\n              className=\"layout__container-background\"\n              type=\"text\"\n              value={savingGoal.value}\n              role=\"setsavings-input\"\n            />\n            <Button\n              onClick={(e) => setSavingGoal(e.target.value)}\n              variant=\"flat\"\n              className=\"button\"\n            >\n              Save\n            </Button>\n          </FormBootstrap.Group>\n        </Col>\n        <Col></Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Dashboard;\n","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Analytics/Total.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/context/TransactionListContext.js",["138","139","140"],"import React, { useState, createContext, useEffect } from \"react\";\n\nexport const TransactionsContext = createContext();\n\nexport const TransactionsProvider = (props) => {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [transactions, setTransactions] = useState({});\n\n  const transactionsValues = Object.values(transactions);\n\n  //GLOBAL TRANSACTION FILTERS FOR HISTORY AND DASHBOARD COMPONENT\n  //...\n\n  useEffect(() => {\n    fetch(\"https://lazyinput-default-rtdb.firebaseio.com/transactions.json\")\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setTransactions(result);\n        },\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      );\n  }, [transactions]);\n\n  return (\n    <TransactionsContext.Provider value={[transactions]}>\n      {props.children}\n    </TransactionsContext.Provider>\n  );\n};\n","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Analytics/Expenses.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Analytics/Incomes.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Analytics/Savings.js",["141","142","143"],"import React, { useContext } from \"react\";\nimport { TransactionsContext } from \"../../context/TransactionListContext\";\nimport Col from \"react-bootstrap/Col\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\n\nconst Savings = () => {\n  const [transactions] = useContext(TransactionsContext);\n  const transactionsValues = Object.values(transactions);\n\n  const sumTransactionValues = transactionsValues\n    .reverse()\n    .map((transaction) => transaction.amount);\n\n  const SavingTransactionValues = transactionsValues\n    .reverse()\n    .map((transaction) => ({\n      amount: transaction.amount,\n      category: transaction.category,\n    }));\n\n  const savingsListTransaction = SavingTransactionValues.filter(\n    (transaction) => {\n      return transaction.category === \"saving\" ? transaction.amount : null;\n    }\n  );\n  // console.log(savingsListTransaction);\n  return (\n    <Col>\n      <h5>Savings</h5>\n      {/* <h2>{Math.abs(savings).toFixed(2)} PLN</h2>\n      <ProgressBar\n        striped\n        variant=\"danger\"\n        min={0}\n        now={Math.abs(savings).toFixed(2)}\n        max={3000}\n        label={`${((Math.abs(savings).toFixed(2) / 7000) * 100).toFixed(2)}%`}\n      /> */}\n    </Col>\n  );\n};\n\nexport default Savings;\n","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Main/data.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Main/Data.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/History/HistoryFilters.js",["144","145","146","147","148","149","150","151","152","153"],"import React, { useContext, useState } from \"react\";\nimport { TransactionsContext } from \"../../context/TransactionListContext\";\nimport \"../classes.css\";\nimport TransactionRow from \"./TransactionUI\";\n\n//MAIN FUNCTION WITH FUNCTIONS\n// function Filter() {\n//   const [transactions] = useContext(TransactionsContext);\n//   const transactionsValues = Object.values(transactions);\n//   const sumTransactionValues = transactionsValues\n//     .reverse()\n//     .map((transaction) => transaction.amount);\n\n//   const AllFilter = () => {\n//     return (\n//       <div className=\"table\">\n//         {transactionsValues.map((transaction, key) => {\n//           return (\n//             <div key={key}>\n//               <TransactionRow\n//                 key={transaction.id}\n//                 text={transaction.text}\n//                 amount={transaction.amount}\n//                 option={transaction.option}\n//                 date={transaction.date}\n//                 category={transaction.category}\n//               />\n//             </div>\n//           );\n//         })}\n//       </div>\n//     );\n//   };\n// }\n// export default Filter;\n\n//FILTER BY TYPE OF CASHFLOW\nexport const AllFilter = () => {\n  const [transactions] = useContext(TransactionsContext);\n  const transactionsValues = Object.values(transactions);\n  const sumTransactionValues = transactionsValues\n    .reverse()\n    .map((transaction) => transaction.amount);\n  return (\n    <div className=\"table\">\n      {transactionsValues.map((transaction, key) => {\n        return (\n          <div key={key}>\n            <TransactionRow\n              key={transaction.id}\n              text={transaction.text}\n              amount={transaction.amount}\n              option={transaction.option}\n              date={transaction.date}\n              category={transaction.category}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport const IncomeFilter = () => {\n  const [transactions] = useContext(TransactionsContext);\n  const transactionsValues = Object.values(transactions);\n  const sumTransactionValues = transactionsValues\n    .reverse()\n    .map((transaction) => transaction.amount);\n  return (\n    <div className=\"table\">\n      {transactionsValues.map((transaction, key) => {\n        return transaction.option === \"income\" ? (\n          <div key={key}>\n            <TransactionRow\n              key={transaction.id}\n              text={transaction.text}\n              amount={transaction.amount}\n              option={transaction.option}\n              date={transaction.date}\n              category={transaction.category}\n            />\n          </div>\n        ) : null;\n      })}\n    </div>\n  );\n};\n\nexport const ExpenseFilter = () => {\n  const [transactions] = useContext(TransactionsContext);\n  const transactionsValues = Object.values(transactions);\n  const sumTransactionValues = transactionsValues\n    .reverse()\n    .map((transaction) => transaction.amount);\n  return (\n    <div className=\"table\">\n      {transactionsValues.map((transaction, key) => {\n        return transaction.option === \"expense\" ? (\n          <div key={key}>\n            <TransactionRow\n              key={transaction.id}\n              text={transaction.text}\n              amount={transaction.amount}\n              option={transaction.option}\n              date={transaction.date}\n              category={transaction.category}\n            />\n          </div>\n        ) : null;\n      })}\n    </div>\n  );\n};\n\n// //FILTER BY CATEGORY\nexport const CategoryFoodFilter = () => {\n  const [transactions] = useContext(TransactionsContext);\n  const transactionsValues = Object.values(transactions);\n  const sumTransactionValues = transactionsValues\n    .reverse()\n    .map((transaction) => transaction.amount);\n  return (\n    <div className=\"table\">\n      {transactionsValues.map((transaction, key) => {\n        return transaction.category === \"food\" ? (\n          <div key={key}>\n            <TransactionRow\n              key={transaction.id}\n              text={transaction.text}\n              amount={transaction.amount}\n              option={transaction.option}\n              date={transaction.date}\n              category={transaction.category}\n            />\n          </div>\n        ) : null;\n      })}\n    </div>\n  );\n};\n\nexport const CategoryHousingFilter = () => {\n  const [transactions] = useContext(TransactionsContext);\n  const transactionsValues = Object.values(transactions);\n  const sumTransactionValues = transactionsValues\n    .reverse()\n    .map((transaction) => transaction.amount);\n  return (\n    <div className=\"table\">\n      {transactionsValues.map((transaction, key) => {\n        return transaction.category === \"housing\" ? (\n          <div key={key}>\n            <TransactionRow\n              key={transaction.id}\n              text={transaction.text}\n              amount={transaction.amount}\n              option={transaction.option}\n              date={transaction.date}\n              category={transaction.category}\n            />\n          </div>\n        ) : null;\n      })}\n    </div>\n  );\n};\n\nexport const CategoryBillsFilter = () => {\n  const [transactions] = useContext(TransactionsContext);\n  const transactionsValues = Object.values(transactions);\n  const sumTransactionValues = transactionsValues\n    .reverse()\n    .map((transaction) => transaction.amount);\n  return (\n    <div className=\"table\">\n      {transactionsValues.map((transaction, key) => {\n        return transaction.category === \"bills\" ? (\n          <div key={key}>\n            <TransactionRow\n              key={transaction.id}\n              text={transaction.text}\n              amount={transaction.amount}\n              option={transaction.option}\n              date={transaction.date}\n              category={transaction.category}\n            />\n          </div>\n        ) : null;\n      })}\n    </div>\n  );\n};\n\nexport const CategoryEntertainmentFilter = () => {\n  const [transactions] = useContext(TransactionsContext);\n  const transactionsValues = Object.values(transactions);\n  const sumTransactionValues = transactionsValues\n    .reverse()\n    .map((transaction) => transaction.amount);\n  return (\n    <div className=\"table\">\n      {transactionsValues.map((transaction, key) => {\n        return transaction.category === \"entertainment\" ? (\n          <div key={key}>\n            <TransactionRow\n              key={transaction.id}\n              text={transaction.text}\n              amount={transaction.amount}\n              option={transaction.option}\n              date={transaction.date}\n              category={transaction.category}\n            />\n          </div>\n        ) : null;\n      })}\n    </div>\n  );\n};\n\nexport const CategoryMiscFilter = () => {\n  const [transactions] = useContext(TransactionsContext);\n  const transactionsValues = Object.values(transactions);\n  const sumTransactionValues = transactionsValues\n    .reverse()\n    .map((transaction) => transaction.amount);\n  return (\n    <div className=\"table\">\n      {transactionsValues.map((transaction, key) => {\n        return transaction.category === \"misc\" ? (\n          <div key={key}>\n            <TransactionRow\n              key={transaction.id}\n              text={transaction.text}\n              amount={transaction.amount}\n              option={transaction.option}\n              date={transaction.date}\n              category={transaction.category}\n            />\n          </div>\n        ) : null;\n      })}\n    </div>\n  );\n};\n\nexport const CategorySavingsFilter = () => {\n  const [transactions] = useContext(TransactionsContext);\n  const transactionsValues = Object.values(transactions);\n  const sumTransactionValues = transactionsValues\n    .reverse()\n    .map((transaction) => transaction.amount);\n  return (\n    <div className=\"table\">\n      {transactionsValues.map((transaction, key) => {\n        return transaction.category === \"savings\" ? (\n          <div key={key}>\n            <TransactionRow\n              key={transaction.id}\n              text={transaction.text}\n              amount={transaction.amount}\n              option={transaction.option}\n              date={transaction.date}\n              category={transaction.category}\n            />\n          </div>\n        ) : null;\n      })}\n    </div>\n  );\n};\n\n// //FILTER BY TIME\n// export const thisMonthFilter = (\n//   <div className=\"table\">\n//     {transactionsValues.map((transaction, key) => {\n//       return transaction.category === \"saving\" ? (\n//         <div key={key}>\n//           <TransactionRow\n//             key={transaction.id}\n//             text={transaction.text}\n//             amount={transaction.amount}\n//             option={transaction.option}\n//             date={transaction.date}\n//             category={transaction.category}\n//           />\n//         </div>\n//       ) : null;\n//     })}\n//   </div>\n// );\n",{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":8,"column":8,"nodeType":"160","messageId":"161","endLine":8,"endColumn":22},{"ruleId":"158","severity":1,"message":"162","line":3,"column":10,"nodeType":"160","messageId":"161","endLine":3,"endColumn":14},{"ruleId":"158","severity":1,"message":"163","line":3,"column":24,"nodeType":"160","messageId":"161","endLine":3,"endColumn":37},{"ruleId":"158","severity":1,"message":"164","line":6,"column":8,"nodeType":"160","messageId":"161","endLine":6,"endColumn":21},{"ruleId":"158","severity":1,"message":"165","line":14,"column":10,"nodeType":"160","messageId":"161","endLine":14,"endColumn":15},{"ruleId":"166","severity":1,"message":"167","line":1,"column":1,"nodeType":"168","endLine":20,"endColumn":3},{"ruleId":"158","severity":1,"message":"169","line":19,"column":8,"nodeType":"160","messageId":"161","endLine":19,"endColumn":22},{"ruleId":"158","severity":1,"message":"170","line":29,"column":9,"nodeType":"160","messageId":"161","endLine":29,"endColumn":29},{"ruleId":"171","severity":1,"message":"172","line":60,"column":34,"nodeType":"173","messageId":"174","endLine":60,"endColumn":36},{"ruleId":"158","severity":1,"message":"175","line":1,"column":47,"nodeType":"160","messageId":"161","endLine":1,"endColumn":57},{"ruleId":"176","severity":1,"message":"177","line":89,"column":11,"nodeType":"178","endLine":89,"endColumn":33},{"ruleId":"179","severity":1,"message":"180","line":107,"column":15,"nodeType":"181","endLine":113,"endColumn":17},{"ruleId":"158","severity":1,"message":"182","line":16,"column":10,"nodeType":"160","messageId":"161","endLine":16,"endColumn":22},{"ruleId":"158","severity":1,"message":"165","line":6,"column":10,"nodeType":"160","messageId":"161","endLine":6,"endColumn":15},{"ruleId":"158","severity":1,"message":"183","line":7,"column":10,"nodeType":"160","messageId":"161","endLine":7,"endColumn":18},{"ruleId":"158","severity":1,"message":"184","line":10,"column":9,"nodeType":"160","messageId":"161","endLine":10,"endColumn":27},{"ruleId":"158","severity":1,"message":"185","line":4,"column":8,"nodeType":"160","messageId":"161","endLine":4,"endColumn":19},{"ruleId":"158","severity":1,"message":"170","line":10,"column":9,"nodeType":"160","messageId":"161","endLine":10,"endColumn":29},{"ruleId":"158","severity":1,"message":"186","line":21,"column":9,"nodeType":"160","messageId":"161","endLine":21,"endColumn":31},{"ruleId":"158","severity":1,"message":"187","line":1,"column":29,"nodeType":"160","messageId":"161","endLine":1,"endColumn":37},{"ruleId":"158","severity":1,"message":"170","line":41,"column":9,"nodeType":"160","messageId":"161","endLine":41,"endColumn":29},{"ruleId":"158","severity":1,"message":"170","line":67,"column":9,"nodeType":"160","messageId":"161","endLine":67,"endColumn":29},{"ruleId":"158","severity":1,"message":"170","line":93,"column":9,"nodeType":"160","messageId":"161","endLine":93,"endColumn":29},{"ruleId":"158","severity":1,"message":"170","line":120,"column":9,"nodeType":"160","messageId":"161","endLine":120,"endColumn":29},{"ruleId":"158","severity":1,"message":"170","line":146,"column":9,"nodeType":"160","messageId":"161","endLine":146,"endColumn":29},{"ruleId":"158","severity":1,"message":"170","line":172,"column":9,"nodeType":"160","messageId":"161","endLine":172,"endColumn":29},{"ruleId":"158","severity":1,"message":"170","line":198,"column":9,"nodeType":"160","messageId":"161","endLine":198,"endColumn":29},{"ruleId":"158","severity":1,"message":"170","line":224,"column":9,"nodeType":"160","messageId":"161","endLine":224,"endColumn":29},{"ruleId":"158","severity":1,"message":"170","line":250,"column":9,"nodeType":"160","messageId":"161","endLine":250,"endColumn":29},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"no-unused-vars","'DarkModeToggle' is defined but never used.","Identifier","unusedVar","'Rent' is defined but never used.","'Subscriptions' is defined but never used.","'FormBootstrap' is defined but never used.","'error' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'TransactionRow' is defined but never used.","'sumTransactionValues' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useReducer' is defined but never used.","jsx-a11y/aria-role","Elements with ARIA roles must use a valid, non-abstract ARIA role.","JSXAttribute","jsx-a11y/no-redundant-roles","The element input has an implicit role of radio. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","'transactions' is assigned a value but never used.","'isLoaded' is assigned a value but never used.","'transactionsValues' is assigned a value but never used.","'ProgressBar' is defined but never used.","'savingsListTransaction' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]