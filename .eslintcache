[{"/Users/bartpiasek/lazybudget/lazybugetapp/src/index.js":"1","/Users/bartpiasek/lazybudget/lazybugetapp/src/context/GlobalState.js":"2","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Layout/Layout.js":"3","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Main/LazyInput/LazyInput.js":"4","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Navigation/Navbar/Navbar.js":"5","/Users/bartpiasek/lazybudget/lazybugetapp/src/context/AppReducer.js":"6","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/History/History.js":"7","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Main/LazyInput/Data.js":"8","/Users/bartpiasek/lazybudget/lazybugetapp/src/axios.js":"9","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/DarkMode/DarkModeToggle.js":"10","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/DarkMode/Toggle.js":"11","/Users/bartpiasek/lazybudget/lazybugetapp/src/auth/signup.js":"12","/Users/bartpiasek/lazybudget/lazybugetapp/src/context/Auth.js":"13","/Users/bartpiasek/lazybudget/lazybugetapp/src/auth/firebase.js":"14","/Users/bartpiasek/lazybudget/lazybugetapp/src/auth/login.js":"15","/Users/bartpiasek/lazybudget/lazybugetapp/src/auth/privateRoute.js":"16","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/History/TransactionUI.js":"17","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Analytics/Dashboard.js":"18","/Users/bartpiasek/lazybudget/lazybugetapp/src/context/TransactionListContext.js":"19","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Analytics/Expenses.js":"20","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Analytics/Incomes.js":"21","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Main/data.js":"22","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Main/Data.js":"23","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/History/HistoryFilters.js":"24","/Users/bartpiasek/lazybudget/lazybugetapp/src/context/CashflowContext.js":"25","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Main/Form/AddTransactionForm.js":"26","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Analytics/Savings.js":"27","/Users/bartpiasek/lazybudget/lazybugetapp/src/App.js":"28","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Analytics/Total.jsx":"29"},{"size":244,"mtime":1616693317072,"results":"30","hashOfConfig":"31"},{"size":911,"mtime":1625432923386,"results":"32","hashOfConfig":"31"},{"size":504,"mtime":1625906609261,"results":"33","hashOfConfig":"31"},{"size":6863,"mtime":1627843863388,"results":"34","hashOfConfig":"31"},{"size":2886,"mtime":1627243636946,"results":"35","hashOfConfig":"31"},{"size":536,"mtime":1626798751041,"results":"36","hashOfConfig":"31"},{"size":5905,"mtime":1627933591772,"results":"37","hashOfConfig":"31"},{"size":432,"mtime":1626015154657,"results":"38","hashOfConfig":"31"},{"size":151,"mtime":1614627227358,"results":"39","hashOfConfig":"31"},{"size":548,"mtime":1625993069463,"results":"40","hashOfConfig":"31"},{"size":312,"mtime":1612018980962,"results":"41","hashOfConfig":"31"},{"size":3200,"mtime":1627243355341,"results":"42","hashOfConfig":"31"},{"size":1401,"mtime":1618168847624,"results":"43","hashOfConfig":"31"},{"size":587,"mtime":1623702412234,"results":"44","hashOfConfig":"31"},{"size":2597,"mtime":1627243442159,"results":"45","hashOfConfig":"31"},{"size":471,"mtime":1618342353033,"results":"46","hashOfConfig":"31"},{"size":753,"mtime":1627242529148,"results":"47","hashOfConfig":"31"},{"size":3473,"mtime":1627843345218,"results":"48","hashOfConfig":"31"},{"size":1316,"mtime":1630177197371,"results":"49","hashOfConfig":"31"},{"size":1023,"mtime":1630177531284,"results":"50","hashOfConfig":"31"},{"size":965,"mtime":1627409307528,"results":"51","hashOfConfig":"31"},{"size":468,"mtime":1625859380220,"results":"52","hashOfConfig":"53"},{"size":470,"mtime":1625946509284,"results":"54","hashOfConfig":"31"},{"size":8187,"mtime":1627934106585,"results":"55","hashOfConfig":"31"},{"size":1402,"mtime":1627419389033,"results":"56","hashOfConfig":"31"},{"size":3662,"mtime":1627843746146,"results":"57","hashOfConfig":"31"},{"size":981,"mtime":1627761502327,"results":"58","hashOfConfig":"31"},{"size":1439,"mtime":1627938424156,"results":"59","hashOfConfig":"31"},{"size":612,"mtime":1628539236369,"results":"60","hashOfConfig":"31"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"1ybvo5r",{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"63"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"63"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"63"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"101","messages":"102","errorCount":1,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bur3ci",{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"63"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"63"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"/Users/bartpiasek/lazybudget/lazybugetapp/src/index.js",[],["125","126"],"/Users/bartpiasek/lazybudget/lazybugetapp/src/context/GlobalState.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Layout/Layout.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Main/LazyInput/LazyInput.js",["127"],"import React, { useState, useContext } from \"react\";\nimport { GlobalContext } from \"../../../context/GlobalState\";\nimport { Rent } from \"./Data\";\nimport axios from \"../../../axios\";\nimport \"../../classes.scss\";\n\nimport FormBootstrap from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\n\nexport const LazyInput = () => {\n  const [text, setText] = useState(\"\");\n  const [amount, setAmount] = useState();\n  const [option, setOption] = useState(\"expense\");\n  const [date, setDate] = useState(\"\");\n  const [category, setCategory] = useState();\n\n  const { addTransaction } = useContext(GlobalContext);\n\n  const newExpenseTransaction = {\n    id: Math.floor(Math.random() * 10000),\n    text,\n    amount: -Math.abs(amount),\n    option,\n    date: new Date().toISOString(),\n    category,\n  };\n\n  const newIncomeTransaction = {\n    id: Math.floor(Math.random() * 10000),\n    text,\n    amount: parseInt(amount),\n    option,\n    date: new Date().toISOString(),\n    category,\n  };\n\n  const onSubmit = (e) => {\n    axios\n      .post(\n        \"/transactions.json\",\n        option === \"expense\"\n          ? Object.assign(newExpenseTransaction)\n          : Object.assign(newIncomeTransaction)\n      )\n      .then((response) => console.log(response))\n      .catch((error) => console.log(error));\n    e.preventDefault();\n\n    option === \"expense\"\n      ? addTransaction(newExpenseTransaction)\n      : addTransaction(newIncomeTransaction);\n  };\n\n  return (\n    <Container>\n      <Row md={4}>\n        {/* <Col>\n          <FormBootstrap onSubmit={onSubmit}>\n            <CardDeck>\n              <Card className=\"element-darkmode\">\n                <div\n                  value={Rent.text}\n                  // onClick={(e) => setState(Rent)}\n                >\n                  <Card.Body>\n                    <Card.Title>\n                      <FormBootstrap.Group>\n                        <FormBootstrap.Control\n                          required\n                          size=\"lg\"\n                          placeholder=\"Name\"\n                          className=\"element-darkmode\"\n                          ref={inputRef}\n                          type=\"text\"\n                          value={text}\n                          role=\"text-input\"\n                          onChange={(e) => setText(e.target.value)}\n                        />\n                      </FormBootstrap.Group>\n                    </Card.Title>\n                    <Card.Text>\n                      <FormBootstrap.Group>\n                        <select\n                          as=\"select\"\n                          size=\"lg\"\n                          value={option}\n                          className=\"element-darkmode\"\n                          role=\"cashflow-select\"\n                          onChange={(e) => setOption(e.target.value)}\n                        >\n                          {options.map((option) => (\n                            <option key={option.key} value={option.value}>\n                              {option.label}\n                            </option>\n                          ))}\n                        </select>\n                      </FormBootstrap.Group>\n                    </Card.Text>\n                    <Card.Text>\n                      <FormBootstrap.Group>\n                        <select\n                          as=\"select\"\n                          size=\"lg\"\n                          value={category}\n                          className=\"element-darkmode\"\n                          role=\"cashflow-select\"\n                          onChange={(e) => setCategory(e.target.value)}\n                        >\n                          {categories.map((category) => (\n                            <option key={category.key} value={category.value}>\n                              {category.label}\n                            </option>\n                          ))}\n                        </select>\n                      </FormBootstrap.Group>\n                    </Card.Text>\n                    <Card.Text>\n                      <FormBootstrap.Group>\n                        <FormBootstrap.Control\n                          required\n                          size=\"lg\"\n                          placeholder=\"PLN\"\n                          className=\"element-darkmode\"\n                          type=\"text\"\n                          value={amount}\n                          role=\"amount-input\"\n                          onChange={(e) => setAmount(e.target.value)}\n                        />\n                      </FormBootstrap.Group>\n                    </Card.Text>\n                  </Card.Body>\n                  <Button\n                    variant=\"flat\"\n                    className=\"button-sort element-darkmode\"\n                    type=\"submit\"\n                    value={date.value}\n                    key={date.key}\n                    onClick={\n                      ((e) => setText(Rent.text),\n                      (e) => setAmount(Rent.amount),\n                      (e) => setOption(Rent.option),\n                      (e) => setDate(e.target.value),\n                      (e) => setCategory(Rent.category))\n                    }\n                  >\n                    Add new\n                  </Button>\n                </div>\n              </Card>\n            </CardDeck>\n          </FormBootstrap>\n        </Col> */}\n        <Col>\n          <FormBootstrap onSubmit={onSubmit}>\n            <CardDeck>\n              <Card className=\"element-darkmode\">\n                <div\n                  value={Rent.text}\n                  // onClick={(e) => setState(Rent)}\n                >\n                  <Card.Body>\n                    <Card.Title>{Rent.text}</Card.Title>\n                    <Card.Text>{Rent.category}</Card.Text>\n                    <Card.Text>{Rent.amount} PLN</Card.Text>\n                  </Card.Body>\n                  <Button\n                    variant=\"flat\"\n                    className=\"button-sort element-darkmode\"\n                    type=\"submit\"\n                    value={date.value}\n                    key={date.key}\n                    onClick={\n                      ((e) => setText(Rent.text),\n                      (e) => setAmount(Rent.amount),\n                      (e) => setOption(Rent.option),\n                      (e) => setDate(e.target.value),\n                      (e) => setCategory(Rent.category))\n                    }\n                  >\n                    Add\n                  </Button>\n                </div>\n              </Card>\n            </CardDeck>\n          </FormBootstrap>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default LazyInput;\n","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Navigation/Navbar/Navbar.js",["128"],"import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport lazybudgetLogo from \"../../../assets/svg/006-wallet.svg\";\nimport { useAuth } from \"../../../context/Auth\";\nimport \"../../classes.scss\";\n\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Container from \"react-bootstrap/Container\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport DarkModeToggle from \"../../DarkMode/DarkModeToggle\";\n\nfunction NavbarMain() {\n  const [error, setError] = useState(\"\");\n  const { currentUser, logout } = useAuth();\n  const history = useHistory();\n\n  async function handleLogout() {\n    setError(\"\");\n    try {\n      await logout();\n      history.push(\"/login\");\n    } catch {\n      setError(\"Failed to logout\");\n    }\n  }\n\n  return (\n    <Navbar\n      collapseOnSelect\n      className=\"navbar element-darkmode element-lightmode\"\n      expand=\"sm\"\n      sticky=\"top\"\n    >\n      <Container>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            {currentUser ? (\n              <>\n                <Link className=\"button-navbar\" to=\"/\">\n                  <img alt=\"\" src={lazybudgetLogo} width=\"30\" height=\"30\" />\n                </Link>\n                <Link className=\"button-navbar\" to=\"/analytics\">\n                  Analytics\n                </Link>\n                <Link className=\"button-navbar\" to=\"/lazy\">\n                  LazyMode\n                </Link>\n                <Dropdown>\n                  <div>\n                    <Dropdown.Toggle\n                      variant=\"flat\"\n                      id=\"dropdown-basic\"\n                      className=\"button-navbar\"\n                    >\n                      <p className=\"button-navbar\">\n                        <strong>{currentUser && currentUser.email}</strong>\n                      </p>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu className=\"button-navbar element-darkmode\">\n                      <Dropdown.Item>\n                        <DarkModeToggle />\n                      </Dropdown.Item>\n                      <Dropdown.Item>Settings</Dropdown.Item>\n                      <Dropdown.Item onClick={handleLogout}>\n                        Logout\n                      </Dropdown.Item>\n                    </Dropdown.Menu>\n                  </div>\n                </Dropdown>\n              </>\n            ) : (\n              <>\n                <Link className=\"button-navbar\" to=\"/signup\">\n                  Sign Up\n                </Link>\n                <Link className=\"button-navbar\" to=\"/login\">\n                  Log In\n                </Link>\n              </>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default NavbarMain;\n","/Users/bartpiasek/lazybudget/lazybugetapp/src/context/AppReducer.js",["129"],"export default (state, action) => {\n  switch (action.type) {\n    case \"DELETE_TRANSACTION\":\n      return {\n        ...state,\n        // send state without element with removed id\n        transactions: state.transactions.filter(\n          (transaction) => transaction.id !== action.payload\n        ),\n      };\n    case \"ADD_TRANSACTION\":\n      return {\n        ...state,\n        // action.payload - This is a new transaction\n        transactions: [action.payload, ...state.transactions],\n      };\n    default:\n      return state;\n  }\n};\n","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/History/History.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Main/LazyInput/Data.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/axios.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/DarkMode/DarkModeToggle.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/DarkMode/Toggle.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/auth/signup.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/context/Auth.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/auth/firebase.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/auth/login.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/auth/privateRoute.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/History/TransactionUI.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Analytics/Dashboard.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/context/TransactionListContext.js",["130","131","132","133","134"],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Analytics/Expenses.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Analytics/Incomes.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Main/data.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Main/Data.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/History/HistoryFilters.js",["135","136","137","138","139","140","141","142","143","144","145"],"import React, { useContext } from \"react\";\nimport { TransactionsContext } from \"../../context/TransactionListContext\";\nimport \"../classes.scss\";\nimport TransactionRow from \"./TransactionUI\";\n\n//FILTER BY TYPE OF CASHFLOW\nexport const AllFilter = () => {\n  const [transactions] = useContext(TransactionsContext);\n  const transactionsValues = Object.values(transactions);\n  const sumTransactionValues = transactionsValues\n    .reverse()\n    .map((transaction) => transaction.amount);\n  return (\n    <div className=\"table\">\n      {transactionsValues.map((transaction, key) => {\n        return (\n          <div key={key}>\n            <TransactionRow\n              key={transaction.id}\n              text={transaction.text}\n              amount={transaction.amount}\n              option={transaction.option}\n              date={transaction.date}\n              category={transaction.category}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport const IncomeFilter = () => {\n  const [transactions] = useContext(TransactionsContext);\n  const transactionsValues = Object.values(transactions);\n  const sumTransactionValues = transactionsValues\n    .reverse()\n    .map((transaction) => transaction.amount);\n  return (\n    <div className=\"table\">\n      {transactionsValues.map((transaction, key) => {\n        return transaction.option === \"income\" ? (\n          <div key={key}>\n            <TransactionRow\n              key={transaction.id}\n              text={transaction.text}\n              amount={transaction.amount}\n              option={transaction.option}\n              date={transaction.date}\n              category={transaction.category}\n            />\n          </div>\n        ) : null;\n      })}\n    </div>\n  );\n};\n\nexport const ExpenseFilter = () => {\n  const [transactions] = useContext(TransactionsContext);\n  const transactionsValues = Object.values(transactions);\n  const sumTransactionValues = transactionsValues\n    .reverse()\n    .map((transaction) => transaction.amount);\n  return (\n    <div className=\"table\">\n      {transactionsValues.map((transaction, key) => {\n        return transaction.option === \"expense\" ? (\n          <div key={key}>\n            <TransactionRow\n              key={transaction.id}\n              text={transaction.text}\n              amount={transaction.amount}\n              option={transaction.option}\n              date={transaction.date}\n              category={transaction.category}\n            />\n          </div>\n        ) : null;\n      })}\n    </div>\n  );\n};\n\n// //FILTER BY CATEGORY\nexport const CategoryFoodFilter = () => {\n  const [transactions] = useContext(TransactionsContext);\n  const transactionsValues = Object.values(transactions);\n  const sumTransactionValues = transactionsValues\n    .reverse()\n    .map((transaction) => transaction.amount);\n  return (\n    <div className=\"table\">\n      {transactionsValues.map((transaction, key) => {\n        return transaction.category === \"food\" ? (\n          <div key={key}>\n            <TransactionRow\n              key={transaction.id}\n              text={transaction.text}\n              amount={transaction.amount}\n              option={transaction.option}\n              date={transaction.date}\n              category={transaction.category}\n            />\n          </div>\n        ) : null;\n      })}\n    </div>\n  );\n};\n\nexport const CategoryHousingFilter = () => {\n  const [transactions] = useContext(TransactionsContext);\n  const transactionsValues = Object.values(transactions);\n  const sumTransactionValues = transactionsValues\n    .reverse()\n    .map((transaction) => transaction.amount);\n  return (\n    <div className=\"table\">\n      {transactionsValues.map((transaction, key) => {\n        return transaction.category === \"housing\" ? (\n          <div key={key}>\n            <TransactionRow\n              key={transaction.id}\n              text={transaction.text}\n              amount={transaction.amount}\n              option={transaction.option}\n              date={transaction.date}\n              category={transaction.category}\n            />\n          </div>\n        ) : null;\n      })}\n    </div>\n  );\n};\n\nexport const CategoryBillsFilter = () => {\n  const [transactions] = useContext(TransactionsContext);\n  const transactionsValues = Object.values(transactions);\n  const sumTransactionValues = transactionsValues\n    .reverse()\n    .map((transaction) => transaction.amount);\n  return (\n    <div className=\"table\">\n      {transactionsValues.map((transaction, key) => {\n        return transaction.category === \"bills\" ? (\n          <div key={key}>\n            <TransactionRow\n              key={transaction.id}\n              text={transaction.text}\n              amount={transaction.amount}\n              option={transaction.option}\n              date={transaction.date}\n              category={transaction.category}\n            />\n          </div>\n        ) : null;\n      })}\n    </div>\n  );\n};\n\nexport const CategoryEntertainmentFilter = () => {\n  const [transactions] = useContext(TransactionsContext);\n  const transactionsValues = Object.values(transactions);\n  const sumTransactionValues = transactionsValues\n    .reverse()\n    .map((transaction) => transaction.amount);\n  return (\n    <div className=\"table\">\n      {transactionsValues.map((transaction, key) => {\n        return transaction.category === \"entertainment\" ? (\n          <div key={key}>\n            <TransactionRow\n              key={transaction.id}\n              text={transaction.text}\n              amount={transaction.amount}\n              option={transaction.option}\n              date={transaction.date}\n              category={transaction.category}\n            />\n          </div>\n        ) : null;\n      })}\n    </div>\n  );\n};\n\nexport const CategoryMiscFilter = () => {\n  const [transactions] = useContext(TransactionsContext);\n  const transactionsValues = Object.values(transactions);\n  const sumTransactionValues = transactionsValues\n    .reverse()\n    .map((transaction) => transaction.amount);\n  return (\n    <div className=\"table\">\n      {transactionsValues.map((transaction, key) => {\n        return transaction.category === \"misc\" ? (\n          <div key={key}>\n            <TransactionRow\n              key={transaction.id}\n              text={transaction.text}\n              amount={transaction.amount}\n              option={transaction.option}\n              date={transaction.date}\n              category={transaction.category}\n            />\n          </div>\n        ) : null;\n      })}\n    </div>\n  );\n};\n\nexport const CategorySavingsFilter = () => {\n  const [transactions] = useContext(TransactionsContext);\n  const transactionsValues = Object.values(transactions);\n  const sumTransactionValues = transactionsValues\n    .reverse()\n    .map((transaction) => transaction.amount);\n  return (\n    <div className=\"table\">\n      {transactionsValues.map((transaction, key) => {\n        return transaction.category === \"savings\" ? (\n          <div key={key}>\n            <TransactionRow\n              key={transaction.id}\n              text={transaction.text}\n              amount={transaction.amount}\n              option={transaction.option}\n              date={transaction.date}\n              category={transaction.category}\n            />\n          </div>\n        ) : null;\n      })}\n    </div>\n  );\n};\n\n// //FILTER BY TIME\n\nexport const ThisMonth = () => {\n  const [transactions] = useContext(TransactionsContext);\n  const transactionsValues = Object.values(transactions);\n  const sumTransactionValues = transactionsValues\n    .reverse()\n    .map((transaction) => transaction.amount);\n\n  //LAST MONTH -> SLICE TOISOSTRINGDATE TO GET NAME OF MONTH\n\n  return (\n    <div className=\"table\">\n      {transactionsValues.map((transaction, key) => {\n        return transaction.date === transaction.date ? (\n          <div key={key}>\n            <TransactionRow\n              key={transaction.id}\n              text={transaction.text}\n              amount={transaction.amount}\n              option={transaction.option}\n              date={transaction.date}\n              category={transaction.category}\n            />\n          </div>\n        ) : null;\n      })}\n    </div>\n  );\n};\n","/Users/bartpiasek/lazybudget/lazybugetapp/src/context/CashflowContext.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Main/Form/AddTransactionForm.js",["146","147","148"],"import React, { useState, useContext, useRef } from \"react\";\nimport { options, categories } from \"../Data\";\nimport { GlobalContext } from \"../../../context/GlobalState\";\nimport axios from \"../../../axios\";\nimport \"../../classes.scss\";\n\nimport FormBootstrap from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nexport const Form = () => {\n  const [text, setText] = useState(\"\");\n  const [amount, setAmount] = useState();\n  const [option, setOption] = useState(\"expense\");\n  const [date, setDate] = useState(\"\");\n  const [category, setCategory] = useState();\n\n  const inputRef = useRef();\n\n  const { addTransaction } = useContext(GlobalContext);\n\n  const newExpenseTransaction = {\n    id: Math.floor(Math.random() * 10000),\n    text,\n    amount: -Math.abs(amount),\n    option,\n    date: new Date().toISOString(),\n    category,\n  };\n\n  const newIncomeTransaction = {\n    id: Math.floor(Math.random() * 10000),\n    text,\n    amount: parseInt(amount),\n    option,\n    date: new Date().toISOString(),\n    category,\n  };\n\n  const onSubmit = (e) => {\n    axios\n      .post(\n        \"/transactions.json\",\n        option === \"expense\"\n          ? Object.assign(newExpenseTransaction)\n          : Object.assign(newIncomeTransaction)\n      )\n      .then((response) => console.log(response))\n      .catch((error) => console.log(error));\n    e.preventDefault();\n\n    option === \"expense\"\n      ? addTransaction(newExpenseTransaction)\n      : addTransaction(newIncomeTransaction);\n  };\n\n  return (\n    <FormBootstrap className=\"form\" onSubmit={onSubmit}>\n      <FormBootstrap.Group>\n        <FormBootstrap.Control\n          required\n          size=\"lg\"\n          placeholder=\"Name\"\n          className=\"element-darkmode\"\n          ref={inputRef}\n          type=\"text\"\n          value={text}\n          role=\"text-input\"\n          onChange={(e) => setText(e.target.value)}\n        />\n      </FormBootstrap.Group>\n      <FormBootstrap.Group>\n        <FormBootstrap.Control\n          required\n          size=\"lg\"\n          placeholder=\"PLN\"\n          className=\"element-darkmode\"\n          type=\"text\"\n          value={amount}\n          role=\"amount-input\"\n          onChange={(e) => setAmount(e.target.value)}\n        />\n      </FormBootstrap.Group>\n      <FormBootstrap.Group>\n        <select\n          as=\"select\"\n          size=\"lg\"\n          value={option}\n          className=\"element-darkmode\"\n          role=\"cashflow-select\"\n          onChange={(e) => setOption(e.target.value)}\n        >\n          {options.map((option) => (\n            <option key={option.key} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </select>\n      </FormBootstrap.Group>\n      <FormBootstrap.Group>\n        <radio value={category} onChange={(e) => setCategory(e.target.value)}>\n          {categories.map((category) => (\n            <FormBootstrap.Check inline>\n              <input\n                name=\"selection\"\n                type=\"radio\"\n                key={category.key}\n                value={category.value}\n                role=\"sort\"\n              />\n              <label role=\"sort\" className=\"button-sort\">\n                {category.label}\n              </label>\n            </FormBootstrap.Check>\n          ))}\n        </radio>\n      </FormBootstrap.Group>\n      <FormBootstrap.Group></FormBootstrap.Group>\n      <Button\n        className=\"element-darkmode\"\n        variant=\"flat\"\n        type=\"submit\"\n        role=\"button-submit\"\n        value={date.value}\n        key={date.key}\n        onClick={(e) => setDate(e.target.value)}\n      >\n        Add\n      </Button>\n      <hr />\n    </FormBootstrap>\n  );\n};\n","/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Analytics/Savings.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/App.js",[],"/Users/bartpiasek/lazybudget/lazybugetapp/src/components/Analytics/Total.jsx",[],{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":178,"column":49,"nodeType":"155","messageId":"156","endLine":178,"endColumn":50},{"ruleId":"157","severity":1,"message":"158","line":14,"column":10,"nodeType":"159","messageId":"160","endLine":14,"endColumn":15},{"ruleId":"161","severity":1,"message":"162","line":1,"column":1,"nodeType":"163","endLine":20,"endColumn":3},{"ruleId":"164","severity":1,"message":"165","line":1,"column":1,"nodeType":"166","messageId":"167","endLine":1,"endColumn":14,"fix":"168"},{"ruleId":"157","severity":1,"message":"169","line":4,"column":5,"nodeType":"159","messageId":"160","endLine":4,"endColumn":12},{"ruleId":"157","severity":1,"message":"158","line":11,"column":38,"nodeType":"159","messageId":"160","endLine":11,"endColumn":43},{"ruleId":"157","severity":1,"message":"170","line":12,"column":39,"nodeType":"159","messageId":"160","endLine":12,"endColumn":47},{"ruleId":"171","severity":2,"message":"172","line":27,"column":14,"nodeType":"173","messageId":"174","endLine":27,"endColumn":21},{"ruleId":"157","severity":1,"message":"175","line":10,"column":9,"nodeType":"159","messageId":"160","endLine":10,"endColumn":29},{"ruleId":"157","severity":1,"message":"175","line":36,"column":9,"nodeType":"159","messageId":"160","endLine":36,"endColumn":29},{"ruleId":"157","severity":1,"message":"175","line":62,"column":9,"nodeType":"159","messageId":"160","endLine":62,"endColumn":29},{"ruleId":"157","severity":1,"message":"175","line":89,"column":9,"nodeType":"159","messageId":"160","endLine":89,"endColumn":29},{"ruleId":"157","severity":1,"message":"175","line":115,"column":9,"nodeType":"159","messageId":"160","endLine":115,"endColumn":29},{"ruleId":"157","severity":1,"message":"175","line":141,"column":9,"nodeType":"159","messageId":"160","endLine":141,"endColumn":29},{"ruleId":"157","severity":1,"message":"175","line":167,"column":9,"nodeType":"159","messageId":"160","endLine":167,"endColumn":29},{"ruleId":"157","severity":1,"message":"175","line":193,"column":9,"nodeType":"159","messageId":"160","endLine":193,"endColumn":29},{"ruleId":"157","severity":1,"message":"175","line":219,"column":9,"nodeType":"159","messageId":"160","endLine":219,"endColumn":29},{"ruleId":"157","severity":1,"message":"175","line":247,"column":9,"nodeType":"159","messageId":"160","endLine":247,"endColumn":29},{"ruleId":"176","severity":1,"message":"177","line":256,"column":16,"nodeType":"178","messageId":"179","endLine":256,"endColumn":53},{"ruleId":"180","severity":1,"message":"181","line":89,"column":11,"nodeType":"182","endLine":89,"endColumn":33},{"ruleId":"180","severity":1,"message":"181","line":108,"column":17,"nodeType":"182","endLine":108,"endColumn":28},{"ruleId":"180","severity":1,"message":"181","line":110,"column":22,"nodeType":"182","endLine":110,"endColumn":33},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"185","text":"186"},"'react_1' is assigned a value but never used.","'isLoaded' is assigned a value but never used.","react/jsx-no-undef","'exports' is not defined.","JSXIdentifier","undefined","'sumTransactionValues' is assigned a value but never used.","no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","jsx-a11y/aria-role","Elements with ARIA roles must use a valid, non-abstract ARIA role.","JSXAttribute","no-global-assign","no-unsafe-negation",[0,13],""]